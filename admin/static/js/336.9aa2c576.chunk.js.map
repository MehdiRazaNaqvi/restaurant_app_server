{"version":3,"file":"static/js/336.9aa2c576.chunk.js","mappings":"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","sources":["routes/index.js","routes/PrivateRoutes.js","components/Toast/index.js","app.js","jwt/_helpers/History.js","layouts/BlankLayout.js","redux/actions/actionMethod.js","redux/actions/merchantActions.js","redux/actions/authAction.js","redux/actions/toastAction.js","redux/actions/mediaAction.js","redux/actions/campaignActions.js","redux/actions/package.js","redux/actions/userAction.js","redux/config/index.js","redux/message.js","routes/AuthRoutes.js"],"sourcesContent":["import { lazy } from \"react\";\r\nconst FullLayout = lazy(() => import(\"../layouts/FullLayout.js\"));\r\nconst BlankLayout = lazy(() => import(\"../layouts/BlankLayout.js\"));\r\nvar indexRoutes = [\r\n  // { path: \"/\", exact:true, name: \"Authentication\", component: BlankLayout },\r\n  { path: \"/dashboard\", exact:false, name: \"Dashboard\", component: FullLayout },\r\n];\r\n\r\nexport default indexRoutes;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// import { AuthenticationService } from \"../jwt/_services\";\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth.authData);\r\n  // console.log(\"auth ===============================\",auth)\r\nreturn(\r\n\r\n\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      // const currentUser = AuthenticationService.currentUserValue;\r\n     \r\n      if (!auth) {\r\n        // not logged in so redirect to login page with the return url\r\n        return (\r\n          <Redirect to=\"/\" />\r\n          //   to={{\r\n          //     pathname: \"/\",\r\n          //     state: { from: props.location },\r\n          //   }}\r\n          // />\r\n        );\r\n      }\r\n\r\n      // authorised so return component\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n  }\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from 'react';\r\n\r\n  import { ToastContainer, toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n  \r\n const Toast=(props)=>{\r\n   console.log(props)\r\n   const {message} = props.toastConfig\r\n   useEffect(() => {\r\n   toast(message)\r\n   setTimeout(() => {\r\n     props.clearToast()\r\n   }, 2000);\r\n\r\n   }, []);\r\n   \r\n  //  console.log('message',message)\r\n  // // return \r\n  // toast(message)\r\n    return (\r\n      <div>\r\n    \r\n        <ToastContainer  message={message} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  \r\nexport default Toast\r\n","import React from \"react\";\r\nimport indexRoutes from \"./routes/\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./redux/Store\";\r\nimport { History } from \"./jwt/_helpers\";\r\nimport { PrivateRoute } from \"./routes/PrivateRoutes\";\r\nimport BlankLayout from \"./layouts/BlankLayout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Toast from \"../src/components/Toast\";\r\nimport { clearToast } from \"./redux/actions\";\r\n\r\nconst App = (props) => {\r\n  const dispatch = useDispatch();\r\n  const toastSelector = useSelector((state) => state.toast);\r\n\r\n  return (\r\n\r\n    \r\n    <Provider store={store}>\r\n      <Router history={History}>\r\n        {toastSelector.isToastShowing && (\r\n          <Toast\r\n            toastConfig={toastSelector.config}\r\n            isToastShowing={toastSelector.isToastShowing}\r\n            clearToast={() => dispatch(clearToast())}\r\n          />\r\n        )}\r\n        {/* <Toast toastConfig={{status:'success', message:'test toast'}}/> */}\r\n        <Switch>\r\n          <Route path=\"/\" exact component={BlankLayout} />;\r\n          {/* <Route  path=\"/\" component={BlankLayout} />; */}\r\n          {/* <Route path= \"/dashboard\"  name= \"Dashboard\" component={FullLayout} />; */}\r\n          {indexRoutes.map((prop, key) => {\r\n            return (\r\n              <PrivateRoute\r\n                exact={prop.exact}\r\n                path={prop.path}\r\n                key={key}\r\n                component={prop.component}\r\n              />\r\n            );\r\n          })}\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createBrowserHistory } from \"history\";\r\n\r\nexport const History = createBrowserHistory({ basename: \"/\" });\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport AuthRoutes from \"../routes/AuthRoutes.js\";\r\n\r\nconst Blanklayout = () => {\r\n  return (\r\n    <div className=\"authentications\">\r\n      <Switch>\r\n        {AuthRoutes.map((prop, key) => {\r\n          if (prop.redirect)\r\n            return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\r\n          return (\r\n            <Route path={prop.path} component={prop.component} key={key} />\r\n          );\r\n        })}\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default Blanklayout;\r\n","import { httpRequest } from \"../config\";\r\nimport { setToast } from \".\";\r\nimport { store } from \"../Store\";\r\nimport { types as Type } from \"../actiontypes\";\r\n\r\nexport const getPublicData = async (\r\n\r\n  dispatch,\r\n  url,\r\n  types,\r\n  successMsg,\r\n  callback\r\n\r\n) => {\r\n  try {\r\n    dispatch({ type: types.start });\r\n    let response = await httpRequest(url);\r\n    response = response.data;\r\n    console.log(\"RES-------\", url, typeof response, response);\r\n    if (response.code && response.code !== 200) {\r\n      throw response;\r\n    } else {\r\n      dispatch({ type: types.success, payload: response });\r\n      callback && callback(response);\r\n      successMsg &&\r\n        dispatch(setToast(\"success\", response.message || successMsg));\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Error: action  getPublicData from url\", url, error);\r\n    dispatch({ type: types.failed });\r\n    // if(error.message.toLowerCase() ==='network error'){\r\n    //     setToast('error',error.message)\r\n    //     // getPublicData(dispatch, url,types,successMsg, callback)\r\n    // }else{\r\n    error.message && dispatch(setToast(\"error\", error.message));\r\n    // }\r\n  }\r\n};\r\n\r\nexport const postData = async (\r\n  dispatch,\r\n  url,\r\n  data,\r\n  header,\r\n  types,\r\n  successMsg,\r\n  callback,\r\n  successNotifyStatus = \"success\"\r\n) => {\r\n  try {\r\n    // console.log(\r\n    //   \"dispatch, url,data, header ,types,successMsg, callback\",\r\n    //   dispatch,\r\n    //   url,\r\n    //   data,\r\n    //   header,\r\n    //   types,\r\n    //   successMsg,\r\n    //   callback\r\n    // );\r\n\r\n    dispatch({ type: types.start });\r\n    const response = await httpRequest.post(url, data, header);\r\n    // console.log(response)\r\n    const result = response.data;\r\n    console.log(\"result\", result)\r\n    let temp = data;\r\n    console.log(\"testingggggg\")\r\n    // console.log(\"POST DATA.............................................\", temp);\r\n    if (result.code && result.code !== 200) throw result;\r\n    else {\r\n      console.log(\"data\", temp);\r\n      let payload = result.data;\r\n      if (types.success === Type.FORGET_PASSSWORD.success) {\r\n        payload = { ...payload, ...data };\r\n      }\r\n      dispatch({ type: types.success, payload });\r\n      callback && callback(payload);\r\n      dispatch(setToast(successNotifyStatus, result.message || successMsg));\r\n    }\r\n  } catch (error) {\r\n    console.log(\r\n      \"Error from action postData from  url\",\r\n      url,\r\n      types,\r\n      error,\r\n      error.message,\r\n      typeof error === \"string\"\r\n    );\r\n    dispatch({ type: types.failed });\r\n    dispatch(\r\n      setToast(\"error\", typeof error === \"string\" ? error : error.message)\r\n    );\r\n  }\r\n};\r\n\r\nexport const authorizedRequest = async (\r\n  dispatch,\r\n  url,\r\n  data,\r\n  types,\r\n  successMsg,\r\n  callback,\r\n  successNotifyStatus = \"success\"\r\n) => {\r\n  try {\r\n    console.log(callback);\r\n\r\n    dispatch({ type: types.start });\r\n    // let header = store.getState().authReducer.userAccessKey\r\n    let headers = { ...store.getState().auth.userAccessKey };\r\n    delete headers.userid;\r\n    let response;\r\n    if (data) {\r\n      response = await httpRequest.post(url, data, { headers });\r\n    } else {\r\n      response = await httpRequest.get(url, data, { headers });\r\n    }\r\n    const result = response.data;\r\n    console.log(\"RESPONSE-----------------------------\\n\", result);\r\n\r\n    if (result.error) throw result.error;\r\n    else {\r\n      dispatch({ type: types.success, payload: result });\r\n      callback && callback(result);\r\n      successMsg && dispatch(setToast(successNotifyStatus, successMsg));\r\n    }\r\n  } catch (error) {\r\n    console.log(\r\n      \"Error from authorizedRequest from url\",\r\n      url,\r\n      error,\r\n      typeof error === \"string\"\r\n    );\r\n    dispatch({ type: types.failed })(\r\n      // if(error.message === 'Authentication Failed') return;\r\n      error.message !== \"Authentication Failed\" && error.message\r\n    ) ||\r\n      (error &&\r\n        dispatch(\r\n          setToast(\"error\", typeof error === \"string\" ? error : error.message)\r\n        ));\r\n  }\r\n};\r\n\r\nexport const authorizedRequestById = async (\r\n  dispatch,\r\n  suburl,\r\n  data,\r\n  id = null,\r\n  types,\r\n  successMsg,\r\n  callback,\r\n  successNotifyStatus = \"success\"\r\n) => {\r\n  let response;\r\n  let authData = { ...store.getState().auth.authData };\r\n  let url =\r\n    id === \"noid\"\r\n      ? suburl\r\n      : id\r\n        ? `${suburl}?id=${id}`\r\n        : `${suburl}/${authData._id}`;\r\n  let headers = { Authorization: \"Bearer \" + authData.accessToken };\r\n  // console.log(\"id--------- \", id);\r\n  // console.log(\"data--------- \", data);\r\n  // console.log(\"url--------- \", url);\r\n\r\n  try {\r\n    dispatch({ type: types.start });\r\n\r\n    if (data) {\r\n     \r\n      \r\n      response = await httpRequest.post(url, data, { headers });\r\n    } else {\r\n   \r\n      \r\n\r\n      response = await httpRequest.get(url, { headers });\r\n      \r\n    }\r\n    const result = response.data;\r\n\r\n   \r\n    if (result.error) throw result.error;\r\n    if (result.code && result.code !== 200) throw result;\r\n    else {\r\n      callback && callback(result.data);\r\n      dispatch({ type: types.success, payload: result.data });\r\n      // alert(result.message)\r\n      if (result.message || successMsg) {\r\n        let message = result.message\r\n          ? typeof result.message === \"string\"\r\n            ? result.message\r\n            : result.message.message\r\n          : successMsg;\r\n        if (message) {\r\n          console.log(\"mess\", message)\r\n          // dispatch(setToast(successNotifyStatus, message));\r\n        }\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.log(\"Error from authorizedRequestById from url\", url, error);\r\n    dispatch({ type: types?.failed });\r\n    error.message && dispatch(setToast(\"error\", error.message));\r\n  }\r\n};","// import { url,baseURL } from \"../config\";\r\nimport { url, baseURL } from \"../config\";\r\nimport { types } from \"../actiontypes\";\r\nimport { authorizedRequestById } from \"./actionMethod\";\r\nimport { message } from \"../message\";\r\nimport axios from \"axios\";\r\nimport * as ActionTypes from \"../actiontypes\";\r\n\r\nexport const getAllMerchantsSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.GET_ALL_MERCHANTS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getAllMerchants = (cb) => (dispatch) => {\r\n  \r\n  return axios.get(`${baseURL}merchant`).then((response) => {\r\n    // return axios.get(`http://localhost:5000/api/merchant/`).then((response) => {\r\n    // console.log(response);\r\n    dispatch(getAllMerchantsSuccess(response));\r\n    cb && cb()\r\n  });\r\n  // authorizedRequestById(\r\n  //   dispatch,\r\n  //   url.getAllMerchants,\r\n  //   null,\r\n  //   \"noid\",\r\n  //   types.GET_ALL_MERCHANTS,\r\n  //   null,\r\n  //   cb\r\n  // );\r\n};\r\n\r\n\r\nexport const getMerchantManagedByMerchantsSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.GET_MERCHANT_MANAGED_BY_MERCHANTS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const getAllMerchantsManagedByMerchant = (cb) => (dispatch) => {\r\n  //all merchants not managed by admin\r\n  return axios\r\n    .get(`${baseURL}merchant/byMerchant`)\r\n    .then((response) =>\r\n      dispatch(getMerchantManagedByMerchantsSuccess(response))\r\n    )\r\n    .catch((error) => console.log(error));\r\n  // authorizedRequestById(\r\n  //   dispatch,\r\n  //   url.getAllMerchantManagedByMerchant,\r\n  //   null,\r\n  //   \"noid\",\r\n  //   ActionTypes.GET_MERCHANT_MANAGED_BY_MERCHANTS,\r\n  //   dispatch(getMerchantManagedByMerchantsSuccess()),\r\n  //   cb\r\n  // );\r\n};\r\n\r\n\r\n\r\nexport const getAllMerchantRequest = (cb) => (dispatch) => {\r\n  authorizedRequestById(\r\n    dispatch,\r\n    url.getAllMerchantRequest,\r\n    null,\r\n    \"noid\",\r\n    types.GET_MERCHANT_REQUEST,\r\n    null,\r\n    cb\r\n  );\r\n};\r\n\r\nexport const getMerchantManagedByAdminSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.GET_MERCHANT_MANAGED_BY_ADMIN,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const getMerchantManagedByAdmin = (cb) => (dispatch) => {\r\n\r\n  return axios\r\n    .get(`${baseURL}merchant/byAdmin`)\r\n    // .get(`http://localhost:5000/merchant/byAdmin`)\r\n    .then((response) => { dispatch(getMerchantManagedByAdminSuccess(response)); cb() })\r\n\r\n    .catch((error) => console.log(error));\r\n  // authorizedRequestById(\r\n  //   dispatch,\r\n  //   url.getAllMerchantManagedByAdmin,\r\n  //   null,\r\n  //   \"noid\",\r\n  //   types.GET_MERCHANT_BY_ADMIN,\r\n  //   null,\r\n  //   cb\r\n  // );\r\n};\r\n//from admin , request, merchant\r\n\r\n\r\n\r\n\r\nexport const updateMerchant = (id, data, callback, from = \"admin\") =>\r\n  (dispatch) => {\r\n    authorizedRequestById(\r\n      dispatch,\r\n      url.updateMerchant,\r\n      data,\r\n      id,\r\n      types.MERCHANT_UPDATED,\r\n      // message.merchantUpdate.success,\r\n      null,\r\n      () => {\r\n        if (from === \"admin\") {\r\n          dispatch(getAllMerchants((data) => callback(data)));\r\n        }\r\n        if (from === \"request\") {\r\n          dispatch(getAllMerchantRequest((data) => callback(data)));\r\n        }\r\n        if (from === \"merchant\")\r\n          dispatch(getAllMerchantsManagedByMerchant((data) => callback(data)));\r\n      }\r\n    );\r\n  };\r\n\r\n\r\n// export const createMerchantByAdmin = (data, callback) => (dispatch) => {\r\n//   authorizedRequestById(\r\n//     dispatch,\r\n//     url.createMerchantByAdmin,\r\n//     data,\r\n//     \"noid\",\r\n//     types.CREATE_MERCHANT_BY_ADMIN,\r\n//     null,\r\n//     () => {\r\n//       dispatch(getMerchantManagedByAdmin((data) => callback(data)));\r\n//     }\r\n//   );\r\n// };\r\n\r\nexport const createMerchantByAdminSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.CREATE_MERCHANT_BY_ADMIN_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const createMerchantByAdminProcessing = () => {\r\n  return {\r\n    type: ActionTypes.CREATE_MERCHANT_BY_ADMIN_PROCESSING,\r\n  };\r\n};\r\n\r\nexport const createMerchantByAdminFailed = (error) => {\r\n  return {\r\n    type: ActionTypes.CREATE_MERCHANT_BY_ADMIN_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const createMerchantByAdmin = (data, callback) => (dispatch) => {\r\n  dispatch(createMerchantByAdminProcessing());\r\n\r\n  authorizedRequestById(\r\n    dispatch,\r\n    url.createMerchantByAdmin,\r\n    data,\r\n    \"noid\",\r\n    types.CREATE_MERCHANT_BY_ADMIN,\r\n    dispatch(createMerchantByAdminSuccess(data)),\r\n    () => {\r\n      dispatch(getMerchantManagedByAdmin((data) => callback(data)));\r\n    }\r\n  );\r\n};\r\n\r\nexport const createMerchantByMerchantSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.CREATE_MERCHANT_BY_ADMIN_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const createMerchantByMerchantProcessing = () => {\r\n  return {\r\n    type: ActionTypes.CREATE_MERCHANT_BY_ADMIN_PROCESSING,\r\n  };\r\n};\r\n\r\nexport const createMerchantByMerchantFailed = (error) => {\r\n  return {\r\n    type: ActionTypes.CREATE_MERCHANT_BY_ADMIN_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const createMerchantByMerchant = (data, callback) => (dispatch) => {\r\n  dispatch(createMerchantByMerchantProcessing());\r\n\r\n  // authorizedRequestById(\r\n  //     dispatch,\r\n  //     url.createMerchantByMerchant,\r\n  //     data,\r\n  //     \"noid\",\r\n  //     types.CREATE_MERCHANT_BY_ADMIN,\r\n  //     dispatch(createMerchantByMerchantSuccess(data)),\r\n  //     () => {\r\n  //       dispatch(getMerchantManagedByMerchant((data) => callback(data)));\r\n  //     }\r\n  // );\r\n};\r\n","import { url } from \"../config\";\r\nimport { types } from \"../actiontypes\";\r\nimport { message } from \"../message\";\r\nimport { postData } from \"./actionMethod\";\r\nimport { store } from \"../Store\";\r\n\r\nexport const login = (data, callback) => (dispatch) => {\r\n  postData(\r\n    dispatch,\r\n    url.login,\r\n    data,\r\n    null,\r\n    types.LOGIN,\r\n    message.login.success,\r\n    callback\r\n  );\r\n};\r\n\r\nexport const forgetPassword = (data, callback) => (dispatch) => {\r\n  postData(\r\n    dispatch,\r\n    url.forgetPassword,\r\n    data,\r\n    null,\r\n    types.FORGET_PASSSWORD,\r\n    null,\r\n    callback,\r\n    \"info\"\r\n  );\r\n};\r\n\r\nexport const accountVerification = (data, callback) => (dispatch) => {\r\n  postData(\r\n    dispatch,\r\n    url.accountVerification,\r\n    data,\r\n    null,\r\n    types.ACCOUNT_VERIFICATION,\r\n    null,\r\n    callback\r\n  );\r\n};\r\n\r\nexport const resetPassword = (data, callback) => (dispatch) => {\r\n  postData(\r\n    dispatch,\r\n    url.resetPassword,\r\n    data,\r\n    null,\r\n    types.RESET_PASSWORD,\r\n    null,\r\n    callback\r\n  );\r\n};\r\n\r\nexport const updatePassword = (data, callback) => (dispatch) => {\r\n  postData(\r\n    dispatch,\r\n    url.updatePassword,\r\n    data,\r\n    null,\r\n    types.UPDATE_PASSWORD,\r\n    null,\r\n    callback\r\n  );\r\n};\r\n\r\nexport const logout = (callback) => async (dispatch) => {\r\n  const token = store.getState().auth.authData.refreshToken;\r\n  postData(dispatch, url.logout, { token }, null, types.LOGOUT, null, callback);\r\n\r\n  // dispatch({type:types.LOGOUT.success})\r\n  // callback && callback()\r\n};\r\n","import { types } from '../actiontypes'\r\n\r\nexport const setToast = (status, message, duration) => dispatch => {\r\n\ttry {\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: types.SHOW_TOAST, payload: {\r\n\t\t\t\tstatus,\r\n\t\t\t\tmessage,\r\n\t\t\t\tduration\r\n\t\t\t}\r\n\t\t})\r\n\t} catch (error) {\r\n\t\tconsole.log('error', error)\r\n\t}\r\n}\r\n\r\nexport const clearToast = () => dispatch => {\r\n\tdispatch({ type: types.HIDE_TOAST })\r\n}\r\n","\r\nimport { url } from '../config';\r\nimport { types } from '../actiontypes';\r\nimport {  authorizedRequestById } from './actionMethod';\r\n\r\nexport const uploadMedia=(data, callback)=>async dispatch=> { \r\n\r\n  await authorizedRequestById(dispatch, url.uploadMedia ,data, 'noid', types.UPLOAD_MEDIA, null ,callback)\r\n\r\n}","import * as ActionTypes from \"../actiontypes\";\r\nimport axios from \"axios\";\r\nimport { authorizedRequestById } from \"./actionMethod\";\r\n\r\nimport { url, baseURL } from \"../config\";\r\nimport { types } from \"../actiontypes\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const createCampaignSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.ADD_CAMPAIGN_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const createCampaignProcessing = () => {\r\n  return {\r\n    type: ActionTypes.ADD_CAMPAIGN_PROCESSING,\r\n  };\r\n};\r\n\r\nexport const createCampaignFailed = (error) => {\r\n  return {\r\n    type: ActionTypes.ADD_CAMPAIGN_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport const createNewCampaign = (data, cb) => (dispatch) => {\r\n  dispatch(createCampaignProcessing());\r\n\r\n  return axios\r\n    .post(`${baseURL}campaign/create`, data)\r\n    // .post(`http://localhost:5000/campaign/create`, data)\r\n    .then((response) => {\r\n\r\n\r\n      if (response?.data?.success) {\r\n\r\n        cb && cb()\r\n\r\n        dispatch(createCampaignSuccess(response));\r\n        // document.getElementById(\"campaign-form\").reset();\r\n        toast(\"Campaign Created\", {\r\n          position: \"top-right\",\r\n          autoClose: 5000,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          draggable: true,\r\n          progress: undefined,\r\n        });\r\n\r\n\r\n      }\r\n      else {\r\n        toast.error(response.data?.message)\r\n        console.log(response)\r\n      }\r\n\r\n\r\n\r\n    })\r\n    .catch((error) => createCampaignFailed(error));\r\n};\r\n\r\n\r\nexport const getMerchantSuccess = (data) => {\r\n  console.log(data)\r\n  return {\r\n    type: ActionTypes.GET_ALL_CAMPAIGNS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\n\r\nexport const getAllCampaigns = () => (dispatch) => {\r\n  return axios\r\n    .get(`${baseURL}campaign/getAllCampaigns`)\r\n    // .get(`http://localhost:5000/campaign/getAllCampaigns`)\r\n    .then((response) => dispatch(getMerchantSuccess(response)));\r\n};\r\n\r\n// PUT CAMPAIGN ACTIONS\r\nexport const updateCampaignSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.CAMPAIGN_UPDATED_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const updateCampaignProcessing = () => {\r\n  return {\r\n    type: ActionTypes.CAMPAIGN_UPDATED_PROCESSING,\r\n  };\r\n};\r\n\r\nexport const updateCampaignFailed = (error) => {\r\n  return {\r\n    type: ActionTypes.CAMPAIGN_UPDATED_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n\r\n\r\nexport const updateCampaign = (formData, id, router) => (dispatch) => {\r\n  dispatch(updateCampaignProcessing());\r\n\r\n\r\n  return axios\r\n    .post(`${baseURL}campaign/updateCampaigns?id=${id}`, formData)\r\n    .then((res) => {\r\n\r\n      router(res)\r\n\r\n      dispatch(updateCampaignSuccess(res));\r\n      dispatch(getAllCampaigns())\r\n      toast.success(\"Campaign Updated\")\r\n      // toast(\"Update Successful\", {\r\n      //   position: \"top-right\",\r\n      //   autoClose: 5000,\r\n      //   hideProgressBar: false,\r\n      //   closeOnClick: true,\r\n      //   pauseOnHover: true,\r\n      //   draggable: true,\r\n      //   progress: undefined,\r\n      // });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(updateCampaignFailed(err));\r\n    });\r\n};\r\n\r\n// DELETE CAMPAIGN ACTIONS\r\nexport const deleteCampaignSuccess = (data) => {\r\n  return {\r\n    type: ActionTypes.CAMPAIGN_DELETE_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const deleteCampaignProcessing = () => {\r\n  return {\r\n    type: ActionTypes.CAMPAIGN_DELETE_PROCESSING,\r\n  };\r\n};\r\n\r\nexport const deleteCampaignFailed = (error) => {\r\n  return {\r\n    type: ActionTypes.CAMPAIGN_DELETE_FAILED,\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const deleteCampaign = (id) => (dispatch) => {\r\n  dispatch(deleteCampaignProcessing());\r\n\r\n  console.log(id);\r\n\r\n  return axios\r\n    .delete(`${baseURL}campaign/deleteCampaigns?id=${id}`)\r\n    .then((res) => {\r\n      dispatch(deleteCampaignSuccess(res));\r\n    })\r\n    .catch((error) => {\r\n      dispatch(deleteCampaignFailed(error));\r\n    });\r\n};\r\n","import { url } from \"../config\"\r\nimport { types } from \"../actiontypes\"\r\nimport { authorizedRequestById, } from \"./actionMethod\"\r\n\r\nexport const getPackageType = (callback)=> dispatch=>{\r\n    authorizedRequestById(dispatch, url.getPackageType, null, 'noid', types.GET_PACKAGE_TYPE, null ,callback)\r\n}\r\n\r\nexport const createPackageType = (data, callback) => dispatch=>{\r\n        \r\n        authorizedRequestById(dispatch, url.createPackageType, data,'noid', types.CREATE_PACKAGE_TYPE, null , ()=>{\r\n            dispatch(getPackageType((data)=>callback(data)))\r\n        })       \r\n} \r\n\r\nexport const editPackageType = (id, data, callback) => dispatch=>{\r\n\r\n    authorizedRequestById( dispatch, url.updatePackageType, data, id, types.EDIT_PACKAGE_TYPE, null ,()=>{\r\n        dispatch(getPackageType( (data)=> callback && callback(data)))\r\n    })\r\n} \r\n\r\nexport const createPackage = (data, callback) => dispatch=>{\r\n        \r\n    authorizedRequestById(dispatch, url.createPackage, data,'noid', types.CREATE_PACKAGE, null , ()=>{\r\n        dispatch(getPackage((data)=>callback(data)))\r\n    })       \r\n} \r\n\r\nexport const editPackage = (id, data, callback) => dispatch=>{\r\n\r\nauthorizedRequestById( dispatch, url.updatePackage, data, id, types.EDIT_PACKAGE, null ,()=>{\r\n    dispatch(getPackage( (data)=> callback && callback(data)))\r\n})\r\n} \r\n\r\nexport const getPackage = (callback)=> dispatch=>{\r\n    authorizedRequestById(dispatch, url.getPackage, null, 'noid', types.GET_PACKAGE, null ,callback)\r\n}\r\nexport const getPackageByPackageTypeId =(id, callback)=> dispatch=> { \r\n    authorizedRequestById(dispatch, url.getPackageByPackageTypeId, null, id, types.GET_PACKAGE_BY_PACKAGETYPE_ID , null , callback)\r\n}","import { url } from '../config';\r\nimport { types } from '../actiontypes';\r\nimport {  authorizedRequestById } from './actionMethod';\r\nimport { message } from \"../message\"\r\n\r\nexport const getAllUsers =()=> dispatch=> { \r\n    authorizedRequestById(dispatch, url.getAllUsers ,null, 'noid', types.GET_CUSTOMERS, null ,null)\r\n}\r\n\r\nexport const updateUser =(data, callback)=> dispatch=> {\r\n    authorizedRequestById(dispatch, url.updateCustomerById , data, null, types.UPDATE_PROFILE_BY_ID , message.userUpdate.profile ,()=>{\r\n        dispatch(getAllUsers(()=>callback()))\r\n        \r\n    })\r\n}\r\n\r\n\r\n","import axios from \"axios\";\r\n// export const baseURL = \"http://localhost:5000/\";\r\n\r\nexport const baseURL = \"https://mooli-server-nodejs.herokuapp.com/\";\r\n\r\n// export const imgURL = \"https://ptdevbucket.s3.us-east-2.amazonaws.com/\";\r\n// export const imgURL =\"http://localhost:5000/images/\";\r\nexport const imgURL = `${baseURL}images/`;\r\n\r\nexport const url = {\r\n  \r\n  uploadMedia: \"media/uploadFile\",\r\n\r\n  login: \"auth/adminLogin\",\r\n  forgetPassword: \"auth/sendForgotPasswordEmail\",\r\n  resetPassword: \"auth/resetPassword\",\r\n  updatePassword: \"auth//updatePassword\",\r\n  accountVerification: \"auth/confirmAccountVerification\",\r\n  logout: \"auth/logout\",\r\n\r\n  getProfileById: \"user/get_user_by_id\",\r\n  updateCustomerById: \"user/update_customer_by_id\",\r\n\r\n  createPackageType: \"packageType/create\",\r\n  updatePackageType: \"packageType/update\",\r\n  getPackageType: \"packageType\",\r\n\r\n  createPackage: \"package/create\",\r\n  updatePackage: \"package/update\",\r\n  getPackage: \"package\",\r\n  getPackageByPackageTypeId: \"package/packageByPackageTypeId\",\r\n  getAllUsers: \"/user\",\r\n  updateUserStatus: \"\",\r\n  getAllRequest: \"\",\r\n\r\n  createMerchantByAdmin: \"merchant/createMerchantByAdmin\",\r\n  updateMerchant: \"merchant/update\",\r\n  getAllMerchantRequest: \"merchant/request\",\r\n  getAllMerchantManagedByAdmin: \"merchant/byAdmin\",\r\n  getAllMerchantManagedByMerchant: \"merchant/byMerchant\",\r\n  getAllMerchants: \"merchant/\",\r\n\r\n  createCampaign: \"campaign/create\",\r\n\r\n  //\r\n  updateTrainerStatus: \"\",\r\n  getAllTrainers: \"\",\r\n  createWorkout: \"workout/create\",\r\n  updateWorkout: \"workout/update\",\r\n  getWorkout: \"workout/\",\r\n};\r\n\r\nexport const httpRequest = axios.create({ baseURL: baseURL });\r\n","export const message={\r\n    signup:{\r\n        success:'User Register Successfully' \r\n     },\r\n     login:{\r\n         success:'User login successfully'\r\n     },\r\n     merchantUpdate:{\r\n        success:'Merchant Updated'\r\n     }\r\n}","import { lazy } from \"react\";\r\n\r\n// const Recoverpwd = lazy(() => import(\"../screen/authentication/RecoverPwd\"));\r\n// const Maintanance = lazy(() => import(\"../screen/authentication/Maintanance\"));\r\nconst Login = lazy(() => import(\"../screen/authentication/Login\"));\r\n\r\nvar authRoutes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Login\",\r\n    icon: \"mdi mdi-account-key\",\r\n    component: Login,\r\n  },\r\n  // {\r\n  //   path: \"/authentication/recover-pwd\",\r\n  //   name: \"Recover Password\",\r\n  //   icon: \"mdi mdi-account-convert\",\r\n  //   component: Recoverpwd,\r\n  // },\r\n  // {\r\n  //   path: \"/authentication/maintanance\",\r\n  //   name: \"Maintanance\",\r\n  //   icon: \"mdi mdi-pencil-box-outline\",\r\n  //   component: Maintanance,\r\n  // },\r\n];\r\nexport default authRoutes;\r\n"],"names":["path","exact","name","component","lazy","PrivateRoute","Component","rest","auth","useSelector","state","authData","render","props","to","console","log","message","toastConfig","useEffect","toast","setTimeout","clearToast","dispatch","useDispatch","toastSelector","store","history","History","isToastShowing","config","BlankLayout","indexRoutes","prop","key","createBrowserHistory","basename","className","AuthRoutes","redirect","from","pathTo","postData","url","data","header","types","successMsg","callback","successNotifyStatus","type","start","httpRequest","response","result","temp","code","payload","success","Type","setToast","failed","authorizedRequestById","suburl","id","_id","headers","Authorization","accessToken","error","getAllMerchants","cb","axios","baseURL","then","ActionTypes","getAllMerchantsManagedByMerchant","catch","getAllMerchantRequest","getMerchantManagedByAdmin","updateMerchant","createMerchantByAdmin","createMerchantByAdminSuccess","login","forgetPassword","resetPassword","updatePassword","logout","token","refreshToken","status","duration","uploadMedia","createNewCampaign","createCampaignSuccess","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","createCampaignFailed","getAllCampaigns","updateCampaign","formData","router","res","err","deleteCampaign","deleteCampaignFailed","getPackageType","createPackageType","editPackageType","createPackage","getPackage","editPackage","getPackageByPackageTypeId","getAllUsers","imgURL","accountVerification","getProfileById","updateCustomerById","updatePackageType","updatePackage","updateUserStatus","getAllRequest","getAllMerchantManagedByAdmin","getAllMerchantManagedByMerchant","createCampaign","updateTrainerStatus","getAllTrainers","createWorkout","updateWorkout","getWorkout","signup","merchantUpdate","authRoutes","icon"],"sourceRoot":""}