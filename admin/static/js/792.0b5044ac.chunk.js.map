{"version":3,"file":"static/js/792.0b5044ac.chunk.js","mappings":"+IAAO,IAAMA,EAAO,CAChBC,QAAQ,UACRC,UAAU,sBACVC,MAAM,OACNC,QAAQ,kBACRC,QAAQ,kBACRC,MAAM,UACNC,OAAO,oB,oRC6CLC,EAAoB,CACxBC,gBAAiB,OAASC,EAAO,IACjCC,iBAAkB,YAClBC,eAAgB,SAGZC,EAAS,CACbC,cAAe,CACbC,gBAAiB,mBACjBC,MAAO,QACPC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,UAElBC,SAAU,CAAEL,MAAO,SACnBM,SAAU,CAAEN,MAAO,QAASO,UAAW,SAAUC,UAAW,QAC5DC,KAAM,CACJC,MAAO,QACPC,OAAQ,QACRC,OAAQ,UACRC,WAAY,WAEdC,OAAQ,CAAEf,gBAAiBf,EAAAA,EAAAA,QAAgB+B,YAAa/B,EAAAA,EAAAA,UAGpDgC,EAA0B,SAACC,GAC/B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,IADgBC,EAAAA,EAAAA,OAC2BC,EAAAA,EAAAA,OAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAGhC,GAA8CC,EAAAA,EAAAA,UADrB,CAAEC,MAAO,KAClC,eAAwBC,GAAxB,WAcA,OACE,iBAAKC,GAAG,cAAR,WACE,iBAAKC,QAAS,kBAAMZ,EAAMa,cAAc,QAA1B,EAAd,WACE,cAAGC,UAAU,0BADf,WAGA,iBAAKA,UAAU,OAAf,WACE,iBAAMA,UAAU,KAAhB,UACE,gBAAKC,IAAKC,EAAMC,IAAI,OAAOC,MAAOtC,EAAOY,UAE3C,eAAIsB,UAAU,8BAAd,+BACA,yFAEF,SAAC,IAAD,CAAKA,UAAU,OAAf,UACE,SAAC,IAAD,CAAKK,GAAG,KAAR,UACE,UAAC,IAAD,CAAMC,SAAUd,GA1BO,SAACe,GAC9BX,EAAmBW,GACnBC,QAAQC,IAAIF,GACZpB,GACEuB,EAAAA,EAAAA,IACEH,GACA,kBAAMrB,EAAMa,cAAc,oBAA1B,IAIL,IAgBO,WACE,UAAC,IAAD,YACE,kBACEC,UAAU,gBACVI,MAAO,CAAEnC,MAAO,SAChB0C,QAAQ,QAHV,oBAOA,gBAAKX,UAAU,OAAf,UACE,UAAC,IAAD,CAAYA,UAAU,OAAtB,WACE,SAAC,IAAD,CAAiBY,UAAU,UAA3B,UACE,SAAC,IAAD,WACE,cAAGZ,UAAU,iBAIjB,kBACEa,YAAY,cACZC,KAAK,QACLC,KAAK,QACLC,IAAKzB,EAAS,CACZ0B,UAAU,EACVC,QACE,0JAEJlB,UAAU,uBAIhB,iBAAMA,UAAU,cAAhB,SACGP,EAAOE,OAAS,sBAGrB,SAAC,IAAD,CAAKK,UAAU,OAAf,UACE,SAAC,IAAD,CAAKK,GAAG,KAAR,UACE,SAAC,IAAD,WACE,SAAC,IAAD,CACEL,UAAU,4BACVI,MAAO,CAAEpC,gBAAiBf,EAAAA,EAAAA,QAAgBkE,OAAQ,GAClDL,KAAK,SAHP,mCAkBjB,EAEKM,EAAyB,SAAClC,GAC9B,IAAMC,GAAWC,EAAAA,EAAAA,MACXO,GAAQ0B,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,mBAAtB,IAC1B,GAA2ClC,EAAAA,EAAAA,MAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAEhC,GAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAO+B,EAAP,KAAqBC,EAArB,KACA,GAA8ChC,EAAAA,EAAAA,WAAS,GAAvD,eAAOiC,EAAP,KAAwBC,EAAxB,KAEIC,EAAwB,CAC1BlC,MAAOA,EACPmC,KAAM,GACNC,SAAU,GACVC,gBAAiB,IAEnB,GAAoDtC,EAAAA,EAAAA,UAClDmC,GADF,eAA2BI,GAA3B,WAyBA,OACE,iBAAKpC,GAAG,oBAAR,WACE,iBAAKC,QAAS,kBAAMZ,EAAMa,cAAc,iBAA1B,EAAd,WACE,cAAGC,UAAU,0BADf,WAGA,iBAAKA,UAAU,OAAf,WACE,iBAAMA,UAAU,KAAhB,UACE,gBAAKC,IAAKC,EAAMC,IAAI,OAAOC,MAAOtC,EAAOY,UAE3C,eAAIsB,UAAU,8BAAd,iCACA,2FAEF,SAAC,IAAD,CAAKA,UAAU,OAAf,UACE,SAAC,IAAD,CAAKK,GAAG,KAAR,UACE,UAAC,IAAD,CAAMC,SAAUd,GAnCM,SAACe,GAE7B,GADA0B,EAAsB1B,GAClBA,EAAKwB,WAAaxB,EAAKyB,gBACzB,OAAO7C,GAAS+C,EAAAA,EAAAA,IAAS,QAAS,4BAElC,IAAIC,EAAM,CACRxC,MAAOA,EACPmC,KAAMvB,EAAKuB,KACXC,SAAUxB,EAAKwB,UAEjBvB,QAAQC,IAAI0B,GACZhD,GACEiD,EAAAA,EAAAA,IACED,GACA,kBAAMjD,EAAMa,cAAc,QAA1B,IAKP,IAgBO,WACE,UAAC,IAAD,YACE,kBACEC,UAAU,gBACVI,MAAO,CAAEnC,MAAO,SAChB0C,QAAQ,QAHV,gCAOA,gBAAKX,UAAU,OAAf,UACE,UAAC,IAAD,CAAYA,UAAU,OAAtB,WACE,SAAC,IAAD,CAAiBY,UAAU,UAA3B,UACE,SAAC,IAAD,WACE,cAAGZ,UAAU,oBAGjB,kBACEa,YAAY,8BACZC,KAAK,OACLC,KAAK,OACLC,IAAKzB,EAAS,CAAE0B,UAAU,EAAMoB,IAAK,IACrCrC,UAAU,uBAIhB,iBAAMA,UAAU,cAAhB,SACGP,EAAOqC,MAAQ,qBAIpB,UAAC,IAAD,YACE,kBACE9B,UAAU,gBACVI,MAAO,CAAEnC,MAAO,SAChB0C,QAAQ,WAHV,uBAOA,gBAAKX,UAAU,OAAf,UACE,UAAC,IAAD,CAAYA,UAAU,OAAtB,WACE,SAAC,IAAD,CAAiBY,UAAU,UAA3B,UACE,SAAC,IAAD,WACE,cAAGZ,UAAW,mBAGlB,kBACEa,YAAY,qBACZC,KAAMW,EAAe,OAAS,WAC9BV,KAAK,WACLC,IAAKzB,EAAS,CAAE0B,UAAU,EAAMoB,IAAK,IACrCrC,UAAU,kBAEZ,SAAC,IAAD,CAAgBI,MAAO,CAAEpC,gBAAiB,SAA1C,UACE,cACE8B,QAAS,kBAAM4B,GAAiBD,EAAvB,EACTzB,UACGyB,EAA6B,kBAAd,sBAM1B,iBAAMzB,UAAU,cAAhB,SACGP,EAAOsC,UACN,mDAGN,UAAC,IAAD,YACE,kBACE/B,UAAU,gBACVI,MAAO,CAAEnC,MAAO,SAChB0C,QAAQ,mBAHV,+BAOA,gBAAKX,UAAU,OAAf,UACE,UAAC,IAAD,CAAYA,UAAU,OAAtB,WACE,SAAC,IAAD,CAAiBY,UAAU,UAA3B,UACE,SAAC,IAAD,WACE,cAAGZ,UAAW,mBAGlB,kBACEa,YAAY,oBACZC,KAAMa,EAAkB,OAAS,WACjCZ,KAAK,kBACLC,IAAKzB,EAAS,CAAE0B,UAAU,EAAMoB,IAAK,IACrCrC,UAAU,kBAEZ,SAAC,IAAD,CAAgBI,MAAO,CAAEpC,gBAAiB,SAA1C,UACE,cACE8B,QAAS,kBAAM8B,GAAoBD,EAA1B,EACT3B,UACG2B,EAAgC,kBAAd,sBAM7B,iBAAM3B,UAAU,cAAhB,SACGP,EAAOuC,iBACN,mDAGN,SAAC,IAAD,CAAKhC,UAAU,OAAf,UACE,SAAC,IAAD,CAAKK,GAAG,KAAR,UACE,SAAC,IAAD,CACEpC,MAAM,SACNqE,KAAK,KACLxB,KAAK,SACLyB,OAAK,EACLnC,MAAOtC,EAAOiB,OALhB,iCAgBf,EAEYyD,EAAiB,SAACtD,GAC7B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA2CE,EAAAA,EAAAA,MAAnCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,OAGhC,GAA4CC,EAAAA,EAAAA,UADpB,CAAEC,MAAO,GAAIoC,SAAU,KAC/C,eAAuBU,GAAvB,WAQA,OACE,iBAAK5C,GAAG,aAAR,WACE,iBAAKG,UAAU,OAAf,WACE,iBAAMA,UAAU,KAAhB,UACE,gBAAKC,IAAKC,EAAMC,IAAI,OAAOC,MAAOtC,EAAOY,UAE3C,eAAI0B,MAAOtC,EAAOS,SAAUyB,UAAU,mBAAtC,kCAIF,SAAC,IAAD,WACE,SAAC,IAAD,CAAKK,GAAG,KAAR,UACE,UAAC,IAAD,CACEC,SAAUd,GAnBH,SAACe,GAChBC,QAAQC,IAAIF,GACZkC,EAAkBlC,GAClBpB,GAASuD,EAAAA,EAAAA,IAAMnC,GAAM,kBAAMoC,EAAAA,EAAAA,KAAa,aAAnB,IACtB,IAgBS3C,UAAU,OACVH,GAAG,YAHL,WAKE,UAAC,IAAD,YACE,kBACEG,UAAU,gBACVI,MAAO,CAAEnC,MAAO,SAChB0C,QAAQ,QAHV,oBAOA,gBAAKX,UAAU,OAAf,UACE,UAAC,IAAD,CAAYA,UAAU,OAAtB,WACE,SAAC,IAAD,CAAiBY,UAAU,UAA3B,UACE,SAAC,IAAD,WACE,cAAGZ,UAAU,iBAIjB,kBACEa,YAAY,cACZC,KAAK,QACLC,KAAK,QACLC,IAAKzB,EAAS,CACZ0B,UAAU,EACVC,QACE,0JAEJlB,UAAU,uBAIhB,iBAAMA,UAAU,cAAhB,SACGP,EAAOE,OAAS,sBAGrB,UAAC,IAAD,YACE,kBACEK,UAAU,gBACVI,MAAO,CAAEnC,MAAO,SAChB0C,QAAQ,QAHV,uBAOA,gBAAKX,UAAU,OAAf,UACE,UAAC,IAAD,CAAYA,UAAU,OAAtB,WACE,SAAC,IAAD,CAAiBY,UAAU,UAA3B,UACE,SAAC,IAAD,WACE,cAAGZ,UAAU,mBAGjB,kBACEa,YAAY,iBACZC,KAAK,WACLC,KAAK,WACLC,IAAKzB,EAAS,CAAE0B,UAAU,EAAMoB,IAAK,IACrCrC,UAAU,uBAIhB,iBAAMA,UAAU,cAAhB,SACGP,EAAOsC,UACN,mDAcN,UAAC,IAAD,YACE,SAAC,IAAD,CACE/B,UAAU,4BACVI,MAAO,CAAEpC,gBAAiBf,EAAAA,EAAAA,QAAgBkE,OAAQ,GAClDL,KAAK,SAHP,qBAOA,gBAAKd,UAAW,kBAAhB,UACE,cACE4C,KAAM,kBACN9C,QAAS,kBAAMZ,EAAMa,cAAc,iBAA1B,EAFX,2CAaf,EA0BD,UAxBa,WACX,IAAMwB,GAAOF,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKsB,QAAtB,IACzB,GAAoCnD,EAAAA,EAAAA,UAAS,SAA7C,eAAOoD,EAAP,KAAmB/C,EAAnB,KACA,OAAOwB,GACL,SAAC,KAAD,CAAUwB,GAAG,gBAEb,UAAC,IAAD,YACE,SAAC,IAAD,CAAKC,GAAI,EAAG5C,MAAO3C,EAAnB,UACE,gBAAKuC,UAAU,8EAGjB,SAAC,IAAD,CAAKgD,GAAI,EAAG5C,MAAOtC,EAAOC,cAA1B,SACkB,UAAf+E,GACC,SAACN,EAAD,CAAgBzC,cAAeA,IACd,mBAAf+C,GACF,SAAC7D,EAAD,CAAyBc,cAAeA,KAExC,SAACqB,EAAD,CAAwBrB,cAAeA,QAKhD,C","sources":["colors.js","screen/authentication/Login.js"],"sourcesContent":["export const COLORS={                    \r\n    primary:'#43b02a',\r\n    primary06:'rgba(67,176,42,255)',\r\n    white:'#fff',\r\n    black06:'rgba(0,0,0,0.6)',\r\n    black09:'rgba(0,0,0,0.7)',\r\n    black:'#87ceeb',\r\n    danger:'rgba(255,0,0,0.5)'\r\n\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  CustomInput,\r\n  FormGroup,\r\n  Row,\r\n  Col,\r\n  UncontrolledTooltip,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport img1 from \"../../assets/images2/logo.png\";\r\nimport img2 from \"../../assets/images2/bg1.jpeg\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport Form from \"react-validation/build/form\";\r\nimport { History } from \"../../jwt/_helpers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { COLORS } from \"../../colors\";\r\nimport {\r\n  forgetPassword,\r\n  login,\r\n  resetPassword,\r\n  setToast,\r\n} from \"../../redux/actions\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\n\r\nconst handleClick = (from, hide, to) => {\r\n  let elem = document.getElementById(from);\r\n  let elem2 = document.getElementById(hide);\r\n  let elem3 = document.getElementById(to);\r\n\r\n  // let elem = document.getElementById(\"recoverForm\");\r\n  // let elem2 = document.getElementById(\"login-form\");\r\n  // let elem3 = document.getElementById(\"resetPasswordForm\");\r\n\r\n  console.log(\"from======\", from);\r\n  console.log(\"hide======\", hide);\r\n  console.log(\"to======\", to);\r\n\r\n  console.log(\"elem======\", elem);\r\n  console.log(\"elem2======\", elem2);\r\n  console.log(\"elem3======\", elem3);\r\n\r\n  elem.style.transition = \"all 2s ease-in-out\";\r\n  elem.style.display = \"none\";\r\n  elem2.style.display = \"none\";\r\n  elem3.style.display = \"block\";\r\n};\r\n\r\nconst sidebarBackground = {\r\n  backgroundImage: \"url(\" + img2 + \")\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundSize: \"cover\",\r\n};\r\n\r\nconst styles = {\r\n  formContainer: {\r\n    backgroundColor: \"rgb(255,255,255)\",\r\n    color: \"black\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  whiteTxt: { color: \"black\" },\r\n  logoText: { color: \"black\", textAlign: \"center\", marginTop: \"20px\" },\r\n  logo: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    margin: \"0% 35% \",\r\n    resizeMode: \"contain\",\r\n  },\r\n  btnRed: { backgroundColor: COLORS.primary, borderColor: COLORS.primary },\r\n};\r\n\r\nconst ForgetPasswordComponent = (props) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let forgetInitialState = { email: \"\" };\r\n  const [forgetFormvalue, setForgetFormvalue] = useState(forgetInitialState);\r\n\r\n  const onSubmitForgetPassword = (data) => {\r\n    setForgetFormvalue(data);\r\n    console.log(data);\r\n    dispatch(\r\n      forgetPassword(\r\n        data,\r\n        () => props.setactivePage(\"resetPasswordForm\")\r\n        // handleClick(\"recoverForm\", \"login-form\", \"resetPasswordForm\")\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"recoverForm\">\r\n      <div onClick={() => props.setactivePage(\"login\")}>\r\n        <i className=\"fa fa-arrow-left mr-1\"></i>Back\r\n      </div>\r\n      <div className=\"logo\">\r\n        <span className=\"db\">\r\n          <img src={img1} alt=\"logo\" style={styles.logo} />\r\n        </span>\r\n        <h5 className=\"font-medium text-white mb-3\">Recover Password</h5>\r\n        <span>Enter your Email and instructions will be sent to you!</span>\r\n      </div>\r\n      <Row className=\"mt-3\">\r\n        <Col xs=\"12\">\r\n          <Form onSubmit={handleSubmit(onSubmitForgetPassword)}>\r\n            <FormGroup>\r\n              <label\r\n                className=\"control-label\"\r\n                style={{ color: \"white\" }}\r\n                htmlFor=\"email\"\r\n              >\r\n                Email\r\n              </label>\r\n              <div className=\"mb-2\">\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ti-user\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n\r\n                  <input\r\n                    placeholder=\"Enter Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern:\r\n                        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                    })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <span className=\"text-danger\">\r\n                {errors.email && \"Invalid Email\"}\r\n              </span>\r\n            </FormGroup>\r\n            <Row className=\"mt-3\">\r\n              <Col xs=\"12\">\r\n                <FormGroup>\r\n                  <Button\r\n                    className=\"button btn-block btn-info\"\r\n                    style={{ backgroundColor: COLORS.primary, border: 0 }}\r\n                    type=\"submit\"\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </FormGroup>\r\n                {/* <Button color=\"danger\" size=\"lg\" type=\"submit\" block style={styles.btnRed}>\r\n                Submit\r\n              </Button> */}\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ResetPasswordComponent = (props) => {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector((state) => state.auth.forgetPasswordEmail);\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  const [showPassword, setshowPassword] = useState(false);\r\n  const [showNewPassword, setshowNewPassword] = useState(false);\r\n\r\n  let resetPassInitialState = {\r\n    email: email,\r\n    code: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  };\r\n  const [resetPassFormvalue, setResetPassFormvalue] = useState(\r\n    resetPassInitialState\r\n  );\r\n\r\n  const onSubmitResetPassword = (data) => {\r\n    setResetPassFormvalue(data);\r\n    if (data.password !== data.confirmPassword) {\r\n      return dispatch(setToast(\"error\", \"Password should be same\"));\r\n    } else {\r\n      let obj = {\r\n        email: email,\r\n        code: data.code,\r\n        password: data.password,\r\n      };\r\n      console.log(obj);\r\n      dispatch(\r\n        resetPassword(\r\n          obj,\r\n          () => props.setactivePage(\"login\")\r\n          // handleClick(\"resetPasswordForm\", \"recoverForm\", \"login-form\")\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"resetPasswordForm\">\r\n      <div onClick={() => props.setactivePage(\"forgetpassword\")}>\r\n        <i className=\"fa fa-arrow-left mr-1\"></i>Back\r\n      </div>\r\n      <div className=\"logo\">\r\n        <span className=\"db\">\r\n          <img src={img1} alt=\"logo\" style={styles.logo} />\r\n        </span>\r\n        <h5 className=\"font-medium text-white mb-3\">Reset New Password</h5>\r\n        <span>Enter the code we sent you in email and set new password</span>\r\n      </div>\r\n      <Row className=\"mt-3\">\r\n        <Col xs=\"12\">\r\n          <Form onSubmit={handleSubmit(onSubmitResetPassword)}>\r\n            <FormGroup>\r\n              <label\r\n                className=\"control-label\"\r\n                style={{ color: \"white\" }}\r\n                htmlFor=\"email\"\r\n              >\r\n                Verification Code\r\n              </label>\r\n              <div className=\"mb-2\">\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"fa fa-code\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <input\r\n                    placeholder=\"Enter Verification Password\"\r\n                    type=\"text\"\r\n                    name=\"code\"\r\n                    ref={register({ required: true, min: 6 })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <span className=\"text-danger\">\r\n                {errors.code && \"Invalid Code\"}\r\n              </span>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <label\r\n                className=\"control-label\"\r\n                style={{ color: \"white\" }}\r\n                htmlFor=\"password\"\r\n              >\r\n                Password\r\n              </label>\r\n              <div className=\"mb-2\">\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className={\"fa fa-key\"}></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <input\r\n                    placeholder=\"Enter New Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    name=\"password\"\r\n                    ref={register({ required: true, min: 8 })}\r\n                    className=\"form-control\"\r\n                  />\r\n                  <InputGroupText style={{ backgroundColor: \"white\" }}>\r\n                    <i\r\n                      onClick={() => setshowPassword(!showPassword)}\r\n                      className={\r\n                        !showPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"\r\n                      }\r\n                    ></i>\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n              </div>\r\n              <span className=\"text-danger\">\r\n                {errors.password &&\r\n                  \"Password must be atleast 8 characters long\"}\r\n              </span>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label\r\n                className=\"control-label\"\r\n                style={{ color: \"white\" }}\r\n                htmlFor=\"confirm password\"\r\n              >\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"mb-2\">\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className={\"fa fa-key\"}></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <input\r\n                    placeholder=\"Re-Enter Password\"\r\n                    type={showNewPassword ? \"text\" : \"password\"}\r\n                    name=\"confirmPassword\"\r\n                    ref={register({ required: true, min: 8 })}\r\n                    className=\"form-control\"\r\n                  />\r\n                  <InputGroupText style={{ backgroundColor: \"white\" }}>\r\n                    <i\r\n                      onClick={() => setshowNewPassword(!showNewPassword)}\r\n                      className={\r\n                        !showNewPassword ? \"fa fa-eye\" : \"fa fa-eye-slash\"\r\n                      }\r\n                    ></i>\r\n                  </InputGroupText>\r\n                </InputGroup>\r\n              </div>\r\n              <span className=\"text-danger\">\r\n                {errors.confirmPassword &&\r\n                  \"Password must be atleast 8 characters long\"}\r\n              </span>\r\n            </FormGroup>\r\n            <Row className=\"mt-3\">\r\n              <Col xs=\"12\">\r\n                <Button\r\n                  color=\"danger\"\r\n                  size=\"lg\"\r\n                  type=\"submit\"\r\n                  block\r\n                  style={styles.btnRed}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const LoginComponent = (props) => {\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\r\n\r\n  let loginInitialState = { email: \"\", password: \"\" };\r\n  const [LoginFormvalue, setLoginFormvalue] = useState(loginInitialState);\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    setLoginFormvalue(data);\r\n    dispatch(login(data, () => History.push(\"/dashboard\")));\r\n  };\r\n\r\n  return (\r\n    <div id=\"login-form\">\r\n      <div className=\"logo\">\r\n        <span className=\"db\">\r\n          <img src={img1} alt=\"logo\" style={styles.logo} />\r\n        </span>\r\n        <h5 style={styles.logoText} className=\"font-medium mb-3\">\r\n          Sign In to Admin\r\n        </h5>\r\n      </div>\r\n      <Row>\r\n        <Col xs=\"12\">\r\n          <Form\r\n            onSubmit={handleSubmit(onSubmit)}\r\n            className=\"mt-3\"\r\n            id=\"loginform\"\r\n          >\r\n            <FormGroup>\r\n              <label\r\n                className=\"control-label\"\r\n                style={{ color: \"white\" }}\r\n                htmlFor=\"email\"\r\n              >\r\n                Email\r\n              </label>\r\n              <div className=\"mb-2\">\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ti-user\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n\r\n                  <input\r\n                    placeholder=\"Enter Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    ref={register({\r\n                      required: true,\r\n                      pattern:\r\n                        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                    })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <span className=\"text-danger\">\r\n                {errors.email && \"Invalid Email\"}\r\n              </span>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <label\r\n                className=\"control-label\"\r\n                style={{ color: \"white\" }}\r\n                htmlFor=\"email\"\r\n              >\r\n                Password\r\n              </label>\r\n              <div className=\"mb-2\">\r\n                <InputGroup className=\"mb-3\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <InputGroupText>\r\n                      <i className=\"ti-pencil\"></i>\r\n                    </InputGroupText>\r\n                  </InputGroupAddon>\r\n                  <input\r\n                    placeholder=\"Enter Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ref={register({ required: true, min: 8 })}\r\n                    className=\"form-control\"\r\n                  />\r\n                </InputGroup>\r\n              </div>\r\n              <span className=\"text-danger\">\r\n                {errors.password &&\r\n                  \"Password must be atleast 8 characters long\"}\r\n              </span>\r\n            </FormGroup>\r\n            {/* <div className=\"ml-auto mt-2 mb-5\">\r\n                    <a\r\n                      href=\"#recoverForm\"\r\n                      id=\"to-recover\"\r\n                      onClick={()=> props.setactivePage('forgetpassword')}\r\n                      className=\"forgot text-dark float-right\"\r\n                    >\r\n                      <i className=\"fa fa-lock mr-1\"></i> Forgot pwd?\r\n                    </a>\r\n                  </div> */}\r\n\r\n            <FormGroup>\r\n              <Button\r\n                className=\"button btn-block btn-info\"\r\n                style={{ backgroundColor: COLORS.primary, border: 0 }}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n              <div className={\"mt-2 text-right\"}>\r\n                <a\r\n                  href={\"#forgetPassword\"}\r\n                  onClick={() => props.setactivePage(\"forgetpassword\")}\r\n                >\r\n                  Forget Password\r\n                </a>\r\n              </div>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Auth = () => {\r\n  const auth = useSelector((state) => state.auth.authData);\r\n  const [activePage, setactivePage] = useState(\"login\");\r\n  return auth ? (\r\n    <Redirect to=\"/dashboard\" />\r\n  ) : (\r\n    <Row>\r\n      <Col sm={8} style={sidebarBackground}>\r\n        <div className=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" />\r\n      </Col>\r\n\r\n      <Col sm={4} style={styles.formContainer}>\r\n        {activePage === \"login\" ? (\r\n          <LoginComponent setactivePage={setactivePage} />\r\n        ) : activePage === \"forgetpassword\" ? (\r\n          <ForgetPasswordComponent setactivePage={setactivePage} />\r\n        ) : (\r\n          <ResetPasswordComponent setactivePage={setactivePage} />\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["COLORS","primary","primary06","white","black06","black09","black","danger","sidebarBackground","backgroundImage","img2","backgroundRepeat","backgroundSize","styles","formContainer","backgroundColor","color","display","flexDirection","alignItems","justifyContent","whiteTxt","logoText","textAlign","marginTop","logo","width","height","margin","resizeMode","btnRed","borderColor","ForgetPasswordComponent","props","dispatch","useDispatch","useHistory","useForm","register","handleSubmit","errors","useState","email","setForgetFormvalue","id","onClick","setactivePage","className","src","img1","alt","style","xs","onSubmit","data","console","log","forgetPassword","htmlFor","addonType","placeholder","type","name","ref","required","pattern","border","ResetPasswordComponent","useSelector","state","auth","forgetPasswordEmail","showPassword","setshowPassword","showNewPassword","setshowNewPassword","resetPassInitialState","code","password","confirmPassword","setResetPassFormvalue","setToast","obj","resetPassword","min","size","block","LoginComponent","setLoginFormvalue","login","History","href","authData","activePage","to","sm"],"sourceRoot":""}