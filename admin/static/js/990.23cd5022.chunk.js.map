{"version":3,"file":"static/js/990.23cd5022.chunk.js","mappings":"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","sources":["colors.js","layouts/layout-components/header/Data.js","routes/Router.js","layouts/layout-components/header/Header.js","layouts/layout-components/sidebar/Sidebar.js","layouts/layout-components/footer/Footer.js","redux/settings/Action.js","layouts/layout-components/customizer/Customizer.js","layouts/FullLayout.js"],"sourcesContent":["export const COLORS={                    \r\n    primary:'#43b02a',\r\n    primary06:'rgba(67,176,42,255)',\r\n    white:'#fff',\r\n    black06:'rgba(0,0,0,0.6)',\r\n    black09:'rgba(0,0,0,0.7)',\r\n    black:'#87ceeb',\r\n    danger:'rgba(255,0,0,0.5)'\r\n\r\n}","import user1 from '../../../assets/images/users/1.jpg';\r\nimport user2 from '../../../assets/images/users/2.jpg';\r\nimport user3 from '../../../assets/images/users/3.jpg';\r\nimport user4 from '../../../assets/images/users/4.jpg';\r\n\r\nimport img1 from '../../../assets/images/big/img1.jpg';\r\nimport img2 from '../../../assets/images/big/img2.jpg';\r\nimport img3 from '../../../assets/images/big/img3.jpg';\r\n\r\nconst messages = [\r\n    {\r\n        \"id\": 1,\r\n        \"image\": user1,\r\n        \"status\": \"online\",\r\n        \"title\": \"Event Today\",\r\n        \"desc\": \"Just a reminder of the event.\",\r\n        \"time\": \"9:10 PM\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"image\": user2,\r\n        \"status\": \"busy\",\r\n        \"title\": \"Send Email\",\r\n        \"desc\": \"Just send my admin!\",\r\n        \"time\": \"9:02 AM\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"image\": user3,\r\n        \"status\": \"away\",\r\n        \"title\": \"Check Email\",\r\n        \"desc\": \"Just check emails for today.\",\r\n        \"time\": \"9:02 AM\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"image\": user4,\r\n        \"status\": \"offline\",\r\n        \"title\": \"Settings\",\r\n        \"desc\": \"You can customize this template as you want.\",\r\n        \"time\": \"9:08 AM\"\r\n    }\r\n];\r\n\r\nconst notifications = [\r\n    {\r\n        \"id\": 1,\r\n        \"iconclass\": \"fa fa-link\",\r\n        \"iconbg\": \"primary\",\r\n        \"title\": \"Launch Admin\",\r\n        \"desc\": \"Just see my new admin!\",\r\n        \"time\": \"9:30 AM\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"iconclass\": \"ti-calendar\",\r\n        \"iconbg\": \"success\",\r\n        \"title\": \"Event Today\",\r\n        \"desc\": \"Just a reminder that you have event.\",\r\n        \"time\": \"9:10 PM\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"iconclass\": \"ti-settings\",\r\n        \"iconbg\": \"info\",\r\n        \"title\": \"Settings\",\r\n        \"desc\": \"You can customize this template as you want.\",\r\n        \"time\": \"9:08 AM\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"iconclass\": \"ti-user\",\r\n        \"iconbg\": \"primary\",\r\n        \"title\": \"Check Email\",\r\n        \"desc\": \"Just check my admin!\",\r\n        \"time\": \"9:02 AM\"\r\n    }\r\n]\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n/* For Mega Menu Carousel                                                         */\r\n/*--------------------------------------------------------------------------------*/\r\nconst items = [\r\n    {\r\n        src: img1,\r\n        altText: 'Slide 1',\r\n        caption: 'Slide 1'\r\n    },\r\n    {\r\n        src: img2,\r\n        altText: 'Slide 2',\r\n        caption: 'Slide 2'\r\n    },\r\n    {\r\n        src: img3,\r\n        altText: 'Slide 3',\r\n        caption: 'Slide 3'\r\n    }\r\n];\r\n\r\nexport { messages, notifications, items };","import { lazy } from \"react\";\r\nimport AuthRoutes from \"./AuthRoutes\";\r\n/*--------------------------------------------------------------------------------*/\r\n/*                              APP SCREENS                                       */\r\n/*--------------------------------------------------------------------------------*/\r\n\r\nconst SecondDashboard = lazy(() => import(\"../screen/Dashboard\"));\r\nconst PackageType = lazy(() => import(\"../screen/packageType\"));\r\nconst Package = lazy(() => import(\"../screen/package\"));\r\nconst Request = lazy(() => import(\"../screen/users/request\"));\r\nconst Users = lazy(() => import(\"../screen/users/users\"));\r\nconst Merchant = lazy(() => import(\"../screen/users/merchant\"));\r\nconst Campaigns = lazy(() => import(\"../screen/users/campaigns\"));\r\nconst MyProfile = lazy(() => import(\"../screen/users/myProfile\"));\r\nconst ForgetPassword = lazy(() => import(\"../screen/users/forgetPassword\"));\r\n\r\nvar auths = [].concat(AuthRoutes);\r\n\r\nvar AppRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Dashboard\",\r\n    mini: \"B\",\r\n    exact: true,\r\n    icon: \"fas fa-th-large\",\r\n    component: SecondDashboard,\r\n  },\r\n  {\r\n    path: \"/dashboard/user/customer\",\r\n    name: \"Customers\",\r\n\r\n    icon: \"mdi mdi-credit-card-multiple\",\r\n    component: Users,\r\n  },\r\n  {\r\n    path: \"/dashboard/user/vendor\",\r\n    name: \"Merchants\",\r\n\r\n    icon: \"mdi mdi-credit-card-multiple\",\r\n    component: Merchant,\r\n  },\r\n  {\r\n    path: \"/dashboard/user/campaign\",\r\n    name: \"Campaigns\",\r\n\r\n    icon: \"fas fa-address-card\",\r\n    component: Campaigns,\r\n  },\r\n  {\r\n    path: \"/dashboard/package/package-type\",\r\n    name: \"Sub Categories\",\r\n\r\n    icon: \"mdi mdi-credit-card-multiple\",\r\n    component: PackageType,\r\n  },\r\n  {\r\n    path: \"/dashboard/package/packages\",\r\n    name: \"Main Categories\",\r\n\r\n    icon: \"mdi mdi-credit-card-multiple\",\r\n    component: Package,\r\n  },\r\n  {\r\n    path: \"/dashboard/myProfile\",\r\n    name: \"Profile\",\r\n\r\n    icon: \"mdi mdi-credit-card-multiple\",\r\n    component: MyProfile,\r\n  }\r\n];\r\nexport default AppRoutes;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Button,\r\n  Navbar,\r\n  NavbarBrand,\r\n  Collapse,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  UncontrolledCarousel,\r\n  Progress,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport * as data from \"./Data\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n/* Import images which are need for the HEADER                                    */\r\n/*--------------------------------------------------------------------------------*/\r\nimport logodarkicon from \"../../../assets/images2/logo.png\";\r\nimport logolighticon from \"../../../assets/images2/logo.png\";\r\nimport logodarktext from \"../../../assets/images2/logo.png\";\r\nimport logolighttext from \"../../../assets/images2/logo.png\";\r\nimport profilephoto from \"../../../assets/images/users/1.jpg\";\r\nimport { COLORS } from \"../../../colors\";\r\nimport { logout } from \"../../../redux/actions\";\r\nimport router from \"../../../routes/Router\";\r\n\r\nconst Header = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  let settings = useSelector((state) => state.settings);\r\n  settings.activeLogoBg = \"skin6\";\r\n  settings.activeNavbarBg = \"skin6\";\r\n  // console.log(settings)\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const adminInfo = useSelector((state) => state.auth.authData);\r\n  // console.log(\"admin info=================\", adminInfo);\r\n\r\n  const showMobilemenu = () => {\r\n    document.getElementById(\"main-wrapper\").classList.toggle(\"show-sidebar\");\r\n  };\r\n\r\n  const sidebarHandler = () => {\r\n    let element = document.getElementById(\"main-wrapper\");\r\n    switch (settings.activeSidebarType) {\r\n      case \"full\":\r\n      case \"iconbar\":\r\n        element.classList.toggle(\"mini-sidebar\");\r\n        if (element.classList.contains(\"mini-sidebar\")) {\r\n          element.setAttribute(\"data-sidebartype\", \"mini-sidebar\");\r\n        } else {\r\n          element.setAttribute(\"data-sidebartype\", settings.activeSidebarType);\r\n        }\r\n        break;\r\n\r\n      case \"overlay\":\r\n      case \"mini-sidebar\":\r\n        element.classList.toggle(\"full\");\r\n        if (element.classList.contains(\"full\")) {\r\n          element.setAttribute(\"data-sidebartype\", \"full\");\r\n        } else {\r\n          element.setAttribute(\"data-sidebartype\", settings.activeSidebarType);\r\n        }\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout(() => history.push(\"/\")));\r\n    // props.history.push(\"/\")\r\n  };\r\n\r\n  return (\r\n    <header className=\"topbar navbarbg\" data-navbarbg={settings.activeNavbarBg}>\r\n      <Navbar\r\n        className={\r\n          \"top-navbar \" +\r\n          (settings.activeNavbarBg === \"skin6\" ? \"navbar-light\" : \"navbar-dark\")\r\n        }\r\n        expand=\"md\"\r\n      >\r\n        <div\r\n          className=\"navbar-header\"\r\n          id=\"logobg\"\r\n          data-logobg={settings.activeLogoBg}\r\n          // style={{backgroundColor:COLORS.white}}\r\n        >\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          {/* Mobile View Toggler  [visible only after 768px screen]                         */}\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          <span\r\n            className=\"nav-toggler d-block d-md-none\"\r\n            onClick={showMobilemenu.bind(null)}\r\n          >\r\n            <i className=\"ti-menu ti-close\" />\r\n          </span>\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          {/* Logos Or Icon will be goes here for Light Layout && Dark Layout                */}\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          <NavbarBrand href=\"/\">\r\n            {/* <b className=\"logo-icon\">\r\n              <img src={logodarkicon} alt=\"homepage\" className=\"dark-logo\"  style={{width:\"60px\"}}/>\r\n              <img src={logolighticon} alt=\"homepage\" className=\"light-logo\" style={{width:\"60px\"}} />\r\n            </b> */}\r\n            <span\r\n              className=\"logo-text\"\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {/* <h2 style={{marginLeft:'5%'}}>Mooli</h2> */}\r\n              <img\r\n                src={logodarktext}\r\n                alt=\"homepage\"\r\n                className=\"dark-logo\"\r\n                style={{ width: 50 }}\r\n              />\r\n              {/* <img src={logolighttext} className=\"light-logo\" alt=\"homepage\" style={{width:'40%', }} /> */}\r\n            </span>\r\n          </NavbarBrand>\r\n\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          {/* Mobile View Toggler  [visible only after 768px screen]                         */}\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          <span\r\n            className=\"topbartoggler d-block d-md-none\"\r\n            onClick={toggle.bind(null)}\r\n          >\r\n            <i className=\"ti-more\" />\r\n          </span>\r\n        </div>\r\n        <Collapse\r\n          className=\"navbarbg\"\r\n          isOpen={isOpen}\r\n          navbar\r\n          data-navbarbg={settings.activeNavbarBg}\r\n          // style={{background:COLORS.black06}}\r\n        >\r\n          <Nav className=\"float-left\" navbar>\r\n            <NavItem>\r\n              <NavLink\r\n                href=\"#\"\r\n                className=\"d-none d-md-block\"\r\n                onClick={sidebarHandler.bind(null)}\r\n              >\r\n                <i className=\"mdi mdi-menu\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <Nav className=\"ml-auto float-right\" navbar>\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* Start Notifications Dropdown                                                   */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                <i className=\"mdi mdi-message\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"mailbox\">\r\n                <span className=\"with-arrow\">\r\n                  <span className=\"bg-primary\" />\r\n                </span>\r\n                <div className=\"d-flex drop-title no-block align-items-center p-3 bg-primary text-white mb-2\">\r\n                  <div className=\"\">\r\n                    <h4 className=\"mb-0 text-white\">4 New</h4>\r\n                    <p className=\"mb-0\">Notifications</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"message-center notifications\">\r\n                  {/*<!-- Message -->*/}\r\n                  {data.notifications.map((notification, index) => {\r\n                    return (\r\n                      <span href=\"\" className=\"message-item\" key={index}>\r\n                        <span\r\n                          className={\r\n                            \"btn btn-circle btn-\" + notification.iconbg\r\n                          }\r\n                        >\r\n                          <i className={notification.iconclass} />\r\n                        </span>\r\n                        <div className=\"mail-contnet\">\r\n                          <h5 className=\"message-title\">\r\n                            {notification.title}\r\n                          </h5>\r\n                          <span className=\"mail-desc\">{notification.desc}</span>\r\n                          <span className=\"time\">{notification.time}</span>\r\n                        </div>\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <a className=\"nav-link text-center mb-1 text-dark\" href=\";\">\r\n                  <strong>Check all notifications</strong>{\" \"}\r\n                  <i className=\"fa fa-angle-right\" />\r\n                </a>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* End Notifications Dropdown                                                     */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* Start Messages Dropdown                                                        */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret>\r\n                <i className=\"mdi mdi-email\" />\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"mailbox\">\r\n                <span className=\"with-arrow\">\r\n                  <span className=\"bg-danger\" />\r\n                </span>\r\n                <div className=\"d-flex drop-title no-block align-items-center p-3 bg-danger text-white mb-2\">\r\n                  <div className=\"\">\r\n                    <h4 className=\"mb-0 text-white\">5 New</h4>\r\n                    <p className=\"mb-0\">Messages</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"message-center message-body\">\r\n                  {/*<!-- Message -->*/}\r\n                  {data.messages.map((message, index) => {\r\n                    return (\r\n                      <span href=\"\" className=\"message-item\" key={index}>\r\n                        <span className=\"user-img\">\r\n                          <img\r\n                            src={message.image}\r\n                            alt=\"user\"\r\n                            className=\"rounded-circle\"\r\n                            width=\"\"\r\n                          />\r\n                          <span\r\n                            className={\r\n                              \"profile-status pull-right \" + message.status\r\n                            }\r\n                          ></span>\r\n                        </span>\r\n                        <div className=\"mail-contnet\">\r\n                          <h5 className=\"message-title\">{message.title}</h5>\r\n                          <span className=\"mail-desc\">{message.desc}</span>\r\n                          <span className=\"time\">{message.time}</span>\r\n                        </div>\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </div>\r\n                <span className=\"nav-link text-center link text-dark\" href=\"\">\r\n                  <b>See all e-Mails</b> <i className=\"fa fa-angle-right\" />\r\n                </span>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* End Messages Dropdown                                                          */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* Start Profile Dropdown                                                         */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            <UncontrolledDropdown nav inNavbar>\r\n              <DropdownToggle nav caret className=\"pro-pic\">\r\n                <img\r\n                  src={profilephoto}\r\n                  alt=\"user\"\r\n                  className=\"rounded-circle\"\r\n                  width=\"31\"\r\n                />\r\n              </DropdownToggle>\r\n              <DropdownMenu right className=\"user-dd\">\r\n                <span className=\"with-arrow\">\r\n                  <span className=\"bg-primary\" />\r\n                </span>\r\n                <div className=\"d-flex no-block align-items-center p-3 bg-primary text-white mb-2\">\r\n                  <div className=\"\">\r\n                    <img\r\n                      src={profilephoto}\r\n                      alt=\"user\"\r\n                      className=\"rounded-circle\"\r\n                      width=\"60\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"ml-2\">\r\n                    <h4 className=\"mb-0 text-white\">{adminInfo.role}</h4>\r\n                    <p className=\" mb-0\">{adminInfo.email}</p>\r\n                  </div>\r\n                </div>\r\n                <DropdownItem\r\n                  onClick={() => history.push(\"/dashboard/myProfile\")}\r\n                >\r\n                  <i className=\"ti-user mr-1 ml-1\" /> My Profile\r\n                </DropdownItem>\r\n                {/*<DropdownItem>*/}\r\n                {/*  <i className=\"ti-wallet mr-1 ml-1\" /> My Balance*/}\r\n                {/*</DropdownItem>*/}\r\n                {/*<DropdownItem>*/}\r\n                {/*  <i className=\"ti-email mr-1 ml-1\" /> Inbox*/}\r\n                {/*</DropdownItem>*/}\r\n                {/*<DropdownItem divider />*/}\r\n                <DropdownItem>\r\n                  <i className=\"ti-settings mr-1 ml-1\" /> Account Settings\r\n                </DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem onClick={() => handleLogout()}>\r\n                  <i className=\"fa fa-power-off mr-1 ml-1\" /> Logout\r\n                </DropdownItem>\r\n                {/*<DropdownItem divider />*/}\r\n                {/*<Button color=\"success\" className=\"btn-rounded ml-3 mb-2 mt-2\">*/}\r\n                {/*  View Profile*/}\r\n                {/*</Button>*/}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* End Profile Dropdown                                                           */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Nav,\r\n  Collapse,\r\n  ButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport profilebg from \"../../../assets/images2/bg1.jpeg\";\r\nimport userimg from \"../../../assets/images/users/1.jpg\";\r\nimport { COLORS } from \"../../../colors\";\r\nimport { logout } from \"../../../redux/actions\";\r\n\r\nconst Sidebar = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const activeRoute = (routeName) => {\r\n    return props.location.pathname.indexOf(routeName) > -1 ? \"selected\" : \"\";\r\n  };\r\n  const [state, setState] = useState({\r\n    authentication: activeRoute(\"/authentication\") !== \"\" ? true : false,\r\n    uicomponents: activeRoute(\"/ui-components\") !== \"\" ? true : false,\r\n    samplepages: activeRoute(\"/sample-pages\") !== \"\" ? true : false,\r\n    dashboardpages: activeRoute(\"/dashboards\") !== \"\" ? true : false,\r\n    iconsPages: activeRoute(\"/icons\") !== \"\" ? true : false,\r\n    formlayoutPages: activeRoute(\"/form-layouts\") !== \"\" ? true : false,\r\n    formpickerPages: activeRoute(\"/form-pickers\") !== \"\" ? true : false,\r\n  });\r\n  const [cstate, csetState] = useState({\r\n    extrapages: activeRoute(\"/sample-pages/extra-pages\") !== \"\" ? true : false,\r\n  });\r\n  const settings = useSelector((state) => state.settings);\r\n\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n\r\n  /*--------------------------------------------------------------------------------*/\r\n  /*To Expand SITE_LOGO With Sidebar-Menu on Hover                                  */\r\n  /*--------------------------------------------------------------------------------*/\r\n  const expandLogo = () => {\r\n    document.getElementById(\"logobg\").classList.toggle(\"expand-logo\");\r\n  };\r\n  /*--------------------------------------------------------------------------------*/\r\n  /*Verifies if routeName is the one active (in browser input)                      */\r\n  /*--------------------------------------------------------------------------------*/\r\n\r\n  /*--------------------------------------------------------------------------------*/\r\n  /*Its for scroll to to                    */\r\n  /*--------------------------------------------------------------------------------*/\r\n\r\n  const scrollTop = () => {\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const showMobilemenu = () => {\r\n    if (window.innerWidth < 800) {\r\n      document.getElementById(\"main-wrapper\").classList.toggle(\"show-sidebar\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout(() => props.history.push(\"/\")));\r\n    // props.history.push(\"/\")\r\n  };\r\n  const profileimg = {\r\n    backgroundImage: \"url(\" + profilebg + \")\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n  };\r\n\r\n  return (\r\n    <aside\r\n      className=\"left-sidebar\"\r\n      id=\"sidebarbg\"\r\n      data-sidebarbg={settings.activeSidebarBg}\r\n      onMouseEnter={expandLogo.bind(null)}\r\n      onMouseLeave={expandLogo.bind(null)}\r\n    >\r\n      <div className=\"scroll-sidebar\">\r\n        <PerfectScrollbar className=\"sidebar-nav\">\r\n          {/* Profile dropdowm */}\r\n          {/*<div className=\"profile-dd\" style={profileimg}>*/}\r\n          {/*  <div*/}\r\n          {/*    className=\"profile-user-img\"*/}\r\n          {/*    style={{ backgroundColor: COLORS.black06 }}*/}\r\n          {/*  >*/}\r\n          {/*<img*/}\r\n          {/*  src={userimg}*/}\r\n          {/*  alt=\"\"*/}\r\n          {/*  width=\"50\"*/}\r\n          {/*  className=\"rounded-circle my-4\"*/}\r\n          {/*/>*/}\r\n          {/*</div>*/}\r\n\r\n          {/*  <ButtonDropdown*/}\r\n          {/*    className=\"username-dd\"*/}\r\n          {/*    isOpen={dropdownOpen}*/}\r\n          {/*    toggle={toggle}*/}\r\n          {/*    style={{backgroundColor:COLORS.black09}}*/}\r\n          {/*  >*/}\r\n          {/*  <DropdownToggle className=\"user-dd border-0 text-left\" caret>*/}\r\n          {/*    Steave Jobs*/}\r\n          {/*  </DropdownToggle>*/}\r\n          {/*    <DropdownMenu>*/}\r\n          {/*      <DropdownItem>My Profile</DropdownItem>*/}\r\n          {/*      /!* <DropdownItem>My Balance</DropdownItem> *!/*/}\r\n          {/*      /!* <DropdownItem>Inbox</DropdownItem> *!/*/}\r\n          {/*      /!* <DropdownItem divider /> *!/*/}\r\n          {/*      <DropdownItem>Account Setting</DropdownItem>*/}\r\n          {/*      <DropdownItem divider />*/}\r\n          {/*      <DropdownItem onClick={()=> handleLogout()} >Logout</DropdownItem>*/}\r\n          {/*    </DropdownMenu>*/}\r\n          {/*  </ButtonDropdown>*/}\r\n          {/*</div>*/}\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          {/* Sidebar Menus will go here                                                */}\r\n          {/*--------------------------------------------------------------------------------*/}\r\n          <Nav id=\"sidebarnav\" >\r\n            {props.routes?.map((prop, key) => {\r\n\r\n              if (prop.redirect) {\r\n                return null;\r\n              } else if (prop.navlabel) {\r\n                return (\r\n                  <li className=\"nav-small-cap\" key={key}>\r\n                    <i className={prop.icon}></i>\r\n                    <span className=\"hide-menu\">{prop.name}</span>\r\n                  </li>\r\n                );\r\n                /*--------------------------------------------------------------------------------*/\r\n                /* Child Menus wiil be goes here                                                    */\r\n                /*--------------------------------------------------------------------------------*/\r\n              } else if (prop.collapse) {\r\n                let firstdd = {};\r\n                firstdd[prop.state] = !state[prop.state];\r\n\r\n                return (\r\n                  <li\r\n                    className={activeRoute(prop.path) + \" sidebar-item\"}\r\n                    key={key}\r\n                  >\r\n                    <span\r\n                      data-toggle=\"collapse\"\r\n                      className=\"sidebar-link has-arrow\"\r\n                      aria-expanded={state[prop.state]}\r\n                      onClick={() => setState(firstdd)}\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <span className=\"hide-menu\">{prop.name}</span>\r\n                    </span>\r\n                    <Collapse isOpen={state[prop.state]}>\r\n                      <ul className=\"first-level\">\r\n                        {prop.child.map((prop, key) => {\r\n                          if (prop.redirect) return null;\r\n\r\n                          /*--------------------------------------------------------------------------------*/\r\n                          /* Child Sub-Menus wiil be goes here                                                    */\r\n                          /*--------------------------------------------------------------------------------*/\r\n\r\n                          if (prop.collapse) {\r\n                            let seconddd = {};\r\n                            seconddd[prop[\"cstate\"]] = !cstate[prop.cstate];\r\n                            return (\r\n                              <li\r\n                                className={\r\n                                  activeRoute(prop.path) + \" sidebar-item\"\r\n                                }\r\n                                key={key}\r\n                              >\r\n                                <span\r\n                                  data-toggle=\"collapse\"\r\n                                  className=\"sidebar-link has-arrow\"\r\n                                  aria-expanded={cstate[prop.cstate]}\r\n                                  onClick={() => csetState(seconddd)}\r\n                                >\r\n                                  <i className={prop.icon} />\r\n                                  <span className=\"hide-menu\">{prop.name}</span>\r\n                                </span>\r\n                                <Collapse isOpen={cstate[prop.cstate]}>\r\n                                  <ul className=\"second-level\">\r\n                                    {prop.subchild.map((prop, key) => {\r\n                                      if (prop.redirect) return null;\r\n                                      return (\r\n                                        <li\r\n                                          className={\r\n                                            activeRoute(prop.path) +\r\n                                            \" sidebar-item\"\r\n                                          }\r\n                                          key={key}\r\n                                        >\r\n                                          <NavLink\r\n                                            to={prop.path}\r\n                                            activeClassName=\"active\"\r\n                                            className=\"sidebar-link\"\r\n                                          >\r\n                                            <i className={prop.icon} />\r\n                                            <span className=\"hide-menu\">\r\n                                              {\" \"}\r\n                                              {prop.name}\r\n                                            </span>\r\n                                          </NavLink>\r\n                                        </li>\r\n                                      );\r\n                                    })}\r\n                                  </ul>\r\n                                </Collapse>\r\n                              </li>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <li\r\n                                onClick={scrollTop}\r\n                                className={\r\n                                  activeRoute(prop.path) +\r\n                                  (prop.pro ? \" active active-pro\" : \"\") +\r\n                                  \" sidebar-item\"\r\n                                }\r\n                                key={key}\r\n                              >\r\n                                <NavLink\r\n                                  to={prop.path}\r\n                                  className=\"sidebar-link\"\r\n                                  activeClassName=\"active\"\r\n                                  onClick={showMobilemenu}\r\n                                >\r\n                                  <i className={prop.icon} />\r\n                                  <span className=\"hide-menu\">{prop.name}</span>\r\n                                </NavLink>\r\n                              </li>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </ul>\r\n                    </Collapse>\r\n                  </li>\r\n                );\r\n              } else {\r\n                return (\r\n                  /*--------------------------------------------------------------------------------*/\r\n                  /* Adding Sidebar Item                                                            */\r\n                  /*--------------------------------------------------------------------------------*/\r\n                  <li\r\n                    onClick={scrollTop}\r\n                    className={\r\n                      activeRoute(prop.path) +\r\n                      (prop.pro ? \" active active-pro\" : \"\") +\r\n                      \" sidebar-item\"\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.path}\r\n                      onClick={showMobilemenu}\r\n                      className=\"sidebar-link\"\r\n                      activeClassName=\"active\"\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <span className=\"hide-menu\">{prop.name}</span>\r\n                    </NavLink>\r\n                  </li>\r\n                );\r\n              }\r\n            })}\r\n          </Nav>\r\n        </PerfectScrollbar>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer text-center\">\r\n      {/* All Rights Reserved by Pt Anywhere. Designed and Developed by\r\n      <a href=\"https://www.wrappixel.com\">WrapPixel</a>. */}\r\n    </footer>\r\n  );\r\n};\r\nexport default Footer;\r\n","import {\r\n    LOGO_BG,\r\n    NAVBAR_BG,\r\n    SIDEBAR_BG,\r\n    THEME,\r\n    DIRECTION,\r\n    SIDEBAR_POSITION,\r\n    HEADER_POSITION,\r\n    LAYOUT,\r\n    SIDEBAR_TYPE\r\n} from '../constants/';\r\n\r\nexport const setLogoBg = (payload) => {\r\n    return {\r\n        type: LOGO_BG,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setNavbarBg = (payload) => {\r\n    return {\r\n        type: NAVBAR_BG,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setSidebarBg = (payload) => {\r\n    return {\r\n        type: SIDEBAR_BG,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setTheme = (payload) => {\r\n    return {\r\n        type: THEME,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setDir = (payload) => {\r\n    return {\r\n        type: DIRECTION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setSidebarPos = (payload) => {\r\n    return {\r\n        type: SIDEBAR_POSITION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setHeaderPos = (payload) => {\r\n    return {\r\n        type: HEADER_POSITION,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setLayout = (payload) => {\r\n    return {\r\n        type: LAYOUT,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setSidebarType = (payload) => {\r\n    return {\r\n        type: SIDEBAR_TYPE,\r\n        payload\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport {\r\n  setLogoBg,\r\n  setNavbarBg,\r\n  setSidebarBg,\r\n  setTheme,\r\n  setDir,\r\n  setSidebarPos,\r\n  setHeaderPos,\r\n  setLayout,\r\n  setSidebarType,\r\n} from \"../../../redux/settings/Action\";\r\n\r\nconst Customizer = () => {\r\n  const settings = useSelector((state) => state.settings);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toggle = () => {\r\n    document\r\n      .getElementById(\"customizer\")\r\n      .classList.toggle(\"show-service-panel\");\r\n  };\r\n\r\n  return (\r\n    <aside className=\"customizer\" id=\"customizer\">\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Toggle Customizer From Here                                                    */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <span\r\n        className=\"service-panel-toggle text-white\"\r\n        onClick={toggle.bind(null)}\r\n      >\r\n        <i className=\"fa fa-spin fa-cog\"></i>\r\n      </span>\r\n      <PerfectScrollbar>\r\n        <div className=\"customizer-body\">\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            <h5 className=\"font-medium m-0\">Theme Color</h5>\r\n            <div\r\n              className=\"btn-group btn-group-toggle mt-2 mb-3\"\r\n              data-toggle=\"buttons\"\r\n            >\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeTheme === \"light\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-color\"\r\n                  id=\"theme-light\"\r\n                  onClick={() => dispatch(setTheme(\"light\"))}\r\n                />{\" \"}\r\n                Light\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeTheme === \"dark\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-color\"\r\n                  id=\"theme-dark\"\r\n                  onClick={() => dispatch(setTheme(\"dark\"))}\r\n                />{\" \"}\r\n                Dark\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            <h5 className=\"font-medium m-0\">Sidebar Position</h5>\r\n            <div\r\n              className=\"btn-group btn-group-toggle mt-2 mb-3\"\r\n              data-toggle=\"buttons\"\r\n            >\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeSidebarPos === \"fixed\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"sidebar-position\"\r\n                  id=\"sidebar-fixed\"\r\n                  onClick={() => dispatch(setSidebarPos(\"fixed\"))}\r\n                />{\" \"}\r\n                Fixed\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeSidebarPos === \"absolute\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"sidebar-position\"\r\n                  id=\"sidebar-absolute\"\r\n                  onClick={() => dispatch(setSidebarPos(\"absolute\"))}\r\n                />{\" \"}\r\n                Not Fixed\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            <h5 className=\"font-medium m-0\">Header Position</h5>\r\n            <div\r\n              className=\"btn-group btn-group-toggle mt-2 mb-3\"\r\n              data-toggle=\"buttons\"\r\n            >\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeHeaderPos === \"fixed\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"header-position\"\r\n                  id=\"header-fixed\"\r\n                  onClick={() => dispatch(setHeaderPos(\"fixed\"))}\r\n                />{\" \"}\r\n                Fixed\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeHeaderPos === \"absolute\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"header-position\"\r\n                  id=\"header-absolute\"\r\n                  onClick={() => dispatch(setHeaderPos(\"absolute\"))}\r\n                />{\" \"}\r\n                Not Fixed\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            <h5 className=\"font-medium m-0\">Layout</h5>\r\n            <div\r\n              className=\"btn-group btn-group-toggle mt-2 mb-3\"\r\n              data-toggle=\"buttons\"\r\n            >\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeLayout === \"full\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-layout\"\r\n                  id=\"theme-full\"\r\n                  onClick={() => dispatch(setLayout(\"full\"))}\r\n                />{\" \"}\r\n                Full\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeLayout === \"boxed\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-layout\"\r\n                  id=\"theme-boxed\"\r\n                  onClick={() => dispatch(setLayout(\"boxed\"))}\r\n                />{\" \"}\r\n                Boxed\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            <h5 className=\"font-medium m-0\">Direction</h5>\r\n            <div\r\n              className=\"btn-group btn-group-toggle mt-2 mb-3\"\r\n              data-toggle=\"buttons\"\r\n            >\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeDir === \"ltr\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-dir\"\r\n                  id=\"theme-ltr\"\r\n                  onClick={() => dispatch(setDir(\"ltr\"))}\r\n                />{\" \"}\r\n                LTR\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeDir === \"rtl\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-dir\"\r\n                  id=\"theme-rtl\"\r\n                  onClick={() => dispatch(setDir(\"rtl\"))}\r\n                />{\" \"}\r\n                RTL\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            <h5 className=\"font-medium m-0\">Sidebar Type</h5>\r\n            <div\r\n              className=\"btn-group btn-group-toggle mt-2 mb-3\"\r\n              data-toggle=\"buttons\"\r\n            >\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeSidebarType === \"full\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-sidebar\"\r\n                  id=\"sidebar-full\"\r\n                  onClick={() => dispatch(setSidebarType(\"full\"))}\r\n                />{\" \"}\r\n                Full\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeSidebarType === \"mini-sidebar\"\r\n                    ? \"active\"\r\n                    : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-sidebar\"\r\n                  id=\"sidebar-mini\"\r\n                  onClick={() => dispatch(setSidebarType(\"mini-sidebar\"))}\r\n                />{\" \"}\r\n                Mini\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeSidebarType === \"iconbar\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-sidebar\"\r\n                  id=\"sidebar-icon\"\r\n                  onClick={() => dispatch(setSidebarType(\"iconbar\"))}\r\n                />{\" \"}\r\n                Icon\r\n              </label>\r\n              <label\r\n                className={\r\n                  \"btn btn-outline-secondary \" +\r\n                  (settings.activeSidebarType === \"overlay\" ? \"active\" : \"\")\r\n                }\r\n              >\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"theme-sidebar\"\r\n                  id=\"sidebar-overlay\"\r\n                  onClick={() => dispatch(setSidebarType(\"overlay\"))}\r\n                />{\" \"}\r\n                Overlay\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* Change LOGO Background                                                         */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            <h5 className=\"font-medium m-0\">Logo Backgrounds</h5>\r\n            <ul className=\"theme-color mt-2 mb-3\">\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-logobg=\"skin1\"\r\n                  onClick={() => dispatch(setLogoBg(\"skin1\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-logobg=\"skin2\"\r\n                  onClick={() => dispatch(setLogoBg(\"skin2\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-logobg=\"skin3\"\r\n                  onClick={() => dispatch(setLogoBg(\"skin3\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-logobg=\"skin4\"\r\n                  onClick={() => dispatch(setLogoBg(\"skin4\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-logobg=\"skin5\"\r\n                  onClick={() => dispatch(setLogoBg(\"skin5\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-logobg=\"skin6\"\r\n                  onClick={() => dispatch(setLogoBg(\"skin6\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* Change NAVBAR Background                                                       */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            <h5 className=\"font-medium m-0\">Navbar Backgrounds</h5>\r\n            <ul className=\"theme-color mt-2 mb-3\">\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-navbarbg=\"skin1\"\r\n                  onClick={() => dispatch(setNavbarBg(\"skin1\"))}\r\n                >\r\n                  &nbsp;&nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-navbarbg=\"skin2\"\r\n                  onClick={() => dispatch(setNavbarBg(\"skin2\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-navbarbg=\"skin3\"\r\n                  onClick={() => dispatch(setNavbarBg(\"skin3\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-navbarbg=\"skin4\"\r\n                  onClick={() => dispatch(setNavbarBg(\"skin4\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-navbarbg=\"skin5\"\r\n                  onClick={() => dispatch(setNavbarBg(\"skin5\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-navbarbg=\"skin6\"\r\n                  onClick={() => dispatch(setNavbarBg(\"skin6\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"mt-3 border-bottom px-3\">\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            {/* Change SIDEBAR Background                                                      */}\r\n            {/*--------------------------------------------------------------------------------*/}\r\n            <h5 className=\"font-medium m-0\">Sidebar Backgrounds</h5>\r\n            <ul className=\"theme-color mt-2 mb-3\">\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-sidebarbg=\"skin1\"\r\n                  onClick={() => dispatch(setSidebarBg(\"skin1\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-sidebarbg=\"skin2\"\r\n                  onClick={() => dispatch(setSidebarBg(\"skin2\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-sidebarbg=\"skin3\"\r\n                  onClick={() => dispatch(setSidebarBg(\"skin3\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-sidebarbg=\"skin4\"\r\n                  onClick={() => dispatch(setSidebarBg(\"skin4\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-sidebarbg=\"skin5\"\r\n                  onClick={() => dispatch(setSidebarBg(\"skin5\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n              <li className=\"theme-item\">\r\n                <span\r\n                  className=\"theme-link\"\r\n                  data-sidebarbg=\"skin6\"\r\n                  onClick={() => dispatch(setSidebarBg(\"skin6\"))}\r\n                >\r\n                  &nbsp;\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </PerfectScrollbar>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Customizer;\r\n","import React, { useState, useEffect, Suspense } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Header from \"./layout-components/header/Header\";\r\nimport Sidebar from \"./layout-components/sidebar/Sidebar\";\r\nimport Footer from \"./layout-components/footer/Footer\";\r\nimport Customizer from \"./layout-components/customizer/Customizer\";\r\nimport AppRoute from \"../routes/Router\";\r\nimport Spinner from \"./../components/spinner/Spinner\";\r\n\r\nconst FullLayout = (props) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n\r\n  const settings = useSelector((state) => state.settings);\r\n\r\n  useEffect(() => {\r\n    const updateDimensions = () => {\r\n      let element = document.getElementById(\"main-wrapper\");\r\n      setWidth(window.innerWidth);\r\n      switch (settings.activeSidebarType) {\r\n        case \"full\":\r\n        case \"iconbar\":\r\n          if (width < 1170) {\r\n            element.setAttribute(\"data-sidebartype\", \"mini-sidebar\");\r\n            element.classList.add(\"mini-sidebar\");\r\n          } else {\r\n            element.setAttribute(\r\n              \"data-sidebartype\",\r\n              settings.activeSidebarType\r\n            );\r\n            element.classList.remove(\"mini-sidebar\");\r\n          }\r\n          break;\r\n\r\n        case \"overlay\":\r\n          if (width < 767) {\r\n            element.setAttribute(\"data-sidebartype\", \"mini-sidebar\");\r\n          } else {\r\n            element.setAttribute(\r\n              \"data-sidebartype\",\r\n              settings.activeSidebarType\r\n            );\r\n          }\r\n          break;\r\n\r\n        default:\r\n      }\r\n    };\r\n    if (document.readyState === \"complete\") {\r\n      updateDimensions();\r\n    }\r\n    window.addEventListener(\"load\", updateDimensions.bind(null));\r\n    window.addEventListener(\"resize\", updateDimensions.bind(null));\r\n    return () => {\r\n      window.removeEventListener(\"load\", updateDimensions.bind(null));\r\n      window.removeEventListener(\"resize\", updateDimensions.bind(null));\r\n    };\r\n  }, [settings.activeSidebarType, width]);\r\n\r\n  return (\r\n    <div\r\n      id=\"main-wrapper\"\r\n      dir={settings.activeDir}\r\n      data-theme={settings.activeTheme}\r\n      data-layout={settings.activeThemeLayout}\r\n      data-sidebartype={settings.activeSidebarType}\r\n      data-sidebar-position={settings.activeSidebarPos}\r\n      data-header-position={settings.activeHeaderPos}\r\n      data-boxed-layout={settings.activeLayout}\r\n    >\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Header                                                                         */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <Header />\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Sidebar                                                                        */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <Sidebar {...props} routes={AppRoute} />\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Page Main-Content                                                              */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <div className=\"page-wrapper d-block\">\r\n        <div className=\"page-content container-fluid\">\r\n          <Suspense fallback={<Spinner />}>\r\n            <Switch>\r\n              {AppRoute.map((prop, key) => {\r\n                if (prop.navlabel) {\r\n                  return null;\r\n                } else if (prop.collapse) {\r\n                  return prop.child.map((prop2, key2) => {\r\n                    if (prop2.collapse) {\r\n                      return prop2.subchild.map((prop3, key3) => {\r\n                        return (\r\n                          <Route\r\n                            path={prop3.path}\r\n                            component={prop3.component}\r\n                            key={key3}\r\n                          />\r\n                        );\r\n                      });\r\n                    }\r\n                    return (\r\n                      <Route\r\n                        path={prop2.path}\r\n                        component={prop2.component}\r\n                        key={key2}\r\n                      />\r\n                    );\r\n                  });\r\n                } else if (prop.redirect) {\r\n                  return (\r\n                    <Redirect from={prop.path} to={prop.pathTo} key={key} />\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <Route\r\n                      path={prop.path}\r\n                      exact={prop.exact}\r\n                      component={prop.component}\r\n                      key={key}\r\n                    />\r\n                  );\r\n                }\r\n              })}\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Customizer from which you can set all the Layout Settings                      */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <Customizer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullLayout;\r\n"],"names":["COLORS","primary","primary06","white","black06","black09","black","danger","messages","user1","user2","user3","user4","notifications","SecondDashboard","lazy","PackageType","Package","Users","Merchant","Campaigns","MyProfile","concat","AuthRoutes","path","name","mini","exact","icon","component","props","useState","isOpen","setIsOpen","dispatch","useDispatch","history","useHistory","settings","useSelector","state","activeLogoBg","activeNavbarBg","adminInfo","auth","authData","className","Navbar","expand","id","onClick","document","getElementById","classList","toggle","bind","NavbarBrand","href","style","display","flexDirection","alignItems","justifyContent","src","logodarktext","alt","width","Collapse","navbar","Nav","NavItem","NavLink","element","activeSidebarType","contains","setAttribute","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","data","notification","index","iconbg","iconclass","title","desc","time","message","image","status","profilephoto","role","email","DropdownItem","push","divider","logout","activeRoute","routeName","location","pathname","indexOf","authentication","uicomponents","samplepages","dashboardpages","iconsPages","formlayoutPages","formpickerPages","setState","extrapages","cstate","csetState","expandLogo","scrollTop","window","scrollTo","top","behavior","showMobilemenu","innerWidth","activeSidebarBg","onMouseEnter","onMouseLeave","routes","map","prop","key","redirect","navlabel","collapse","firstdd","child","seconddd","subchild","to","activeClassName","pro","setLogoBg","payload","type","LOGO_BG","setNavbarBg","NAVBAR_BG","setSidebarBg","SIDEBAR_BG","setTheme","THEME","setDir","DIRECTION","setSidebarPos","SIDEBAR_POSITION","setHeaderPos","HEADER_POSITION","setLayout","LAYOUT","setSidebarType","SIDEBAR_TYPE","activeTheme","activeSidebarPos","activeHeaderPos","activeLayout","activeDir","setWidth","useEffect","updateDimensions","add","remove","readyState","addEventListener","removeEventListener","dir","activeThemeLayout","AppRoute","Suspense","fallback","Spinner","prop2","key2","prop3","key3","from","pathTo"],"sourceRoot":""}